{
  "openapi": "3.0.0",
  "info": {
    "version": "2023-10-26",
    "title": "Cashfree Payout APIs",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "email": "developers@cashfree.com",
      "name": "API Support",
      "url": "https://discord.com/invite/QdZkNSxXsB"
    },
    "description": "Cashfree's Payout APIs provide developers with a streamlined pathway to integrate advanced payout capabilities into their applications, platforms and websites."
  },
  "servers": [
    {
      "url": "https://payout-gamma.cashfree.com",
      "description": "Sandbox server"
    },
    {
      "url": "https://payout-api.cashfree.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Collection of APIs to handle authentication and authorization."
    },
    {
      "name": "Beneficiary",
      "description": "Collection of APIs to add beneficiaries or get added beneficiaries details."
    },
    {
      "name": "Account",
      "description": "Collection of APIs to get the balance, withdraw and move funds between accounts."
    },
    {
      "name": "Transfers",
      "description": "Collection of APIs to transfer funds to beneficiaries through bank transfers, Paytm, Amazon Pay, UPI, IMPS, and NEFT."
    },
    {
      "name": "Transfers v1.2",
      "description": "Collection of APIs to transfer funds to beneficiaries through bank transfers, Paytm, Amazon Pay, UPI, IMPS, and NEFT. The version 1.2 transfer APIs include paymentInstrumentId as one of the body parameters."
    },
    {
      "name": "Incidents",
      "description": "Collection of APIs to get the list of incidents on banks(Resolved,Unresolved,All) for a given time range."
    },
    {
      "name": "Cashgram",
      "description": "Collection of APIs to access Cashgram."
    }
  ],
  "components": {
    "securitySchemes": {
      "XClientID": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-id",
        "description": "Client app ID. You can find your app id in the <a href=\"https://merchant.cashfree.com/merchants/pg/developers/api-keys?env=prod\" target=\"_blank\">merchant dashboard</a>."
      },
      "XClientSecret": {
        "type": "apiKey",
        "in": "header",
        "name": "x-client-secret",
        "description": "Client secret key. You can find your secret in the <a href=\"https://merchant.cashfree.com/merchants/pg/developers/api-keys?env=prod\" target=\"_blank\">merchant dashboard</a>."
      },
      "XCFSignatureHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-cf-signature",
        "description": "Use this if you do not have a static IP for 2FA check"
      },
      "Authorization": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Use this if you do not want to pass the bearer token"
      }
    },
    "schemas": {
      "Error": {
        "title": "Error",
        "description": "Error Response for non-2XX cases",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Overall status of the API call"
          },
          "message": {
            "type": "string",
            "description": "Detailed message explaining the response"
          },
          "subCode": {
            "type": "string",
            "description": "Status code acting as an umbrella for the response"
          }
        }
      },
      "AddBeneficiaryRequest": {
        "title": "AddBeneficiaryRequest",
        "description": "Request Body for adding a new beneficiary",
        "type": "object",
        "properties": {
          "beneId": {
            "type": "string",
            "description": "Unique Beneficiary ID to identify the beneficiary. Alphanumeric and underscore (_) allowed (50 character limit)"
          },
          "name": {
            "type": "string",
            "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed. Alphabets, numbers, white spaces ( ), and special characters are allowed."
          },
          "email": {
            "type": "string",
            "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)"
          },
          "phone": {
            "type": "string",
            "description": "Beneficiaries phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
          },
          "bankAccount": {
            "type": "string",
            "description": "Beneficiary bank account (9 - 18 alphanumeric character limit)"
          },
          "ifsc": {
            "type": "string",
            "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0"
          },
          "vpa": {
            "type": "string",
            "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
          },
          "address1": {
            "type": "string",
            "description": "Beneficiaries address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
          },
          "address2": {
            "type": "string",
            "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
          },
          "city": {
            "type": "string",
            "description": "Beneficiary city, only alphabets and white space (50 character limit)"
          },
          "state": {
            "type": "string",
            "description": "Beneficiary state, only alphabets and white space (50 character limit)"
          },
          "pincode": {
            "type": "string",
            "description": "Beneficiaries pincode, only numbers (6 character limit)"
          }
        },
        "required": [
          "beneId",
          "name",
          "email",
          "phone",
          "address1"
        ]
      },
      "RemoveBeneficiaryRequest": {
        "title": "RemoveBeneficiaryRequest",
        "description": "Request Body for removing a new beneficiary",
        "type": "object",
        "properties": {
          "beneId": {
            "type": "string",
            "description": "Beneficiaries Id to delete, alphanumeric and underscore allowed (50 character limit)"
          }
        },
        "required": [
          "beneId"
        ]
      },
      "SelfWithdrawalRequest": {
        "title": "SelfWithdrawalRequest",
        "description": "Self Withdrawal Request",
        "type": "object",
        "properties": {
          "withdrawalId": {
            "type": "string",
            "description": "Unique identifier for the withdrawal, alphanumeric allowed (50 character limit)"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be withdrawn, decimal (>= 1.00)"
          },
          "remarks": {
            "type": "string",
            "description": "Remarks, if any. Alphanumeric and white space (70 character limit)"
          }
        },
        "required": [
          "withdrawalId",
          "amount"
        ]
      },
      "InternalTransferRequest": {
        "title": "InternalTransferRequest",
        "description": "Internal Transfer Request",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred. Number (>=1)"
          },
          "rechargeAccount": {
            "type": "string",
            "description": "Cashfree internal recharge account number. Alphanumeric allowed"
          },
          "transferId": {
            "type": "string",
            "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit). If the value is not passed, the id will be autogenerated."
          }
        },
        "required": [
          "amount",
          "rechargeAccount"
        ]
      },
      "InternalTransferRequestV12": {
        "title": "InternalTransferRequestV12",
        "description": "Internal Transfer Request v1.2",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred. Number (>=1)"
          },
          "rechargeAccount": {
            "type": "string",
            "description": "It is the Cashfree Payments' internal recharge account number. Alphanumeric characters are allowed."
          },
          "transferId": {
            "type": "string",
            "description": "It is the unique ID to identify the transfer. Alphanumeric, hyphen (-), and underscore (_) characters are allowed. Maximum character limit is 40. The ID is auto-generated if the parameter is left blank."
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "It is the unique ID to identify the fund source from which you want to transfer the money. Alphanumeric characters are allowed."
          },
          "toPaymentInstrumentId": {
            "type": "string",
            "description": "It is the unique ID to identify the fund source where you want to deposit the money. Alphanumeric characters are allowed."
          },
          "remarks": {
            "type": "string",
            "description": "Any remarks if required."
          }
        },
        "required": [
          "amount"
        ]
      },
      "TransferRequest": {
        "title": "TransferRequest",
        "description": "Transfer Request",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "amount to be transferred. Decimals allowed (>= 1.00)"
          },
          "beneId": {
            "type": "string",
            "description": "Beneficiary Id. Alphanumeric characters allowed.",
            "maxLength": 50
          },
          "transferId": {
            "type": "string",
            "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit).",
            "maxLength": 40
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer.",
            "maxLength": 20
          },
          "remarks": {
            "type": "string",
            "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit).",
            "maxLength": 70
          },
          "transferType": {
            "type": "string",
            "description": "Transfer Type",
            "maxLength": 7
          },
          "ipAddress": {
            "type": "string",
            "description": "IP Address of the caller"
          },
          "product": {
            "type": "string",
            "description": "Cashfree Product Name"
          },
          "rda": {
            "type": "object",
            "description": "Rupee Drawing Arrangement",
            "properties": {
              "quoteId": {
                "type": "string",
                "description": "Quote ID"
              },
              "requestCurrency": {
                "type": "string",
                "description": "Request Currency"
              },
              "sendingCurrency": {
                "type": "string",
                "description": "Sending Currency"
              },
              "receivingCurrency": {
                "type": "string",
                "description": "Receiving Currency"
              },
              "type": {
                "type": "string",
                "description": "RDA Type",
                "enum": [
                  "inttransfer",
                  "p2p",
                  "p2b",
                  "b2p",
                  "b2b"
                ]
              },
              "senderMobNo": {
                "type": "string",
                "description": "Sender Mobile Number"
              },
              "senderKyc": {
                "type": "object",
                "description": "Sender KYC Details",
                "properties": {
                  "nationality": {
                    "type": "string",
                    "description": "Sender's Nationality"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "description": "Sender's Date of Birth"
                  },
                  "document": {
                    "type": "object",
                    "description": "Sender's Document",
                    "properties": {
                      "idType": {
                        "type": "string",
                        "description": "Document Type"
                      },
                      "idNumber": {
                        "type": "string",
                        "description": "Document Number"
                      },
                      "expiryDate": {
                        "type": "string",
                        "description": "Document expiration date"
                      }
                    },
                    "required": [
                      "idType",
                      "idNumber",
                      "expiryDate"
                    ]
                  },
                  "postalAddress": {
                    "type": "object",
                    "description": "Sender's Postal Address",
                    "properties": {
                      "addressLine1": {
                        "type": "string",
                        "description": "Address Line 1"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country"
                      }
                    },
                    "required": [
                      "addressLine1",
                      "city",
                      "country"
                    ]
                  },
                  "subjectName": {
                    "type": "object",
                    "description": "Sender's Name",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "First Name"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last Name"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "Full Name"
                      }
                    },
                    "required": [
                      "firstName",
                      "lastName",
                      "fullName"
                    ]
                  },
                  "primaryContactCountryCode": {
                    "type": "string",
                    "description": "Primary Contact's Country Code"
                  },
                  "primaryContactNo": {
                    "type": "string",
                    "description": "Primary Contact Number"
                  },
                  "primaryContactNoType": {
                    "type": "string",
                    "description": "Primary Contact Type"
                  }
                },
                "required": [
                  "nationality",
                  "dateOfBirth",
                  "document",
                  "postalAddress",
                  "subjectName"
                ]
              },
              "receivingCountry": {
                "type": "string",
                "description": "Receiving Country"
              },
              "remittancePurpose": {
                "type": "string",
                "description": "Remittance Purpose"
              },
              "sourceOfFunds": {
                "type": "string",
                "description": "Source Of Funds"
              },
              "relationshipSender": {
                "type": "string",
                "description": "Relationship with Sender"
              },
              "originCountry": {
                "type": "string",
                "description": "Country of origin"
              },
              "senderBusinessKyc": {
                "type": "object",
                "description": "Business KYC details",
                "properties": {
                  "pinCode": {
                    "type": "string",
                    "description": "Pincode"
                  },
                  "address": {
                    "type": "string",
                    "description": "Address"
                  },
                  "primaryContactCountryCode": {
                    "type": "string",
                    "description": "Primary Contact's Country Code"
                  },
                  "primaryContactNo": {
                    "type": "string",
                    "description": "Primary Contact Number"
                  },
                  "email": {
                    "type": "string",
                    "description": "Business Email ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Business Name"
                  },
                  "addressCountryCode": {
                    "type": "string",
                    "description": "Business Address Country Code"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "Country Code"
                  },
                  "regType": {
                    "type": "string",
                    "description": "Registration Type"
                  },
                  "regIssuedBy": {
                    "type": "string",
                    "description": "Registration Issued By"
                  },
                  "regIssuedAt": {
                    "type": "string",
                    "description": "Registration Issued At"
                  },
                  "regNumber": {
                    "type": "string",
                    "description": "Registration Number"
                  },
                  "regIssueDate": {
                    "type": "string",
                    "description": "Registration Issued Date"
                  },
                  "idValidThru": {
                    "type": "string",
                    "description": "Registration ID Validation Date"
                  }
                },
                "required": [
                  "address",
                  "primaryContactCountryCode",
                  "primaryContactNo",
                  "email",
                  "name",
                  "countryCode",
                  "regType",
                  "regNumber",
                  "regIssueDate",
                  "idValidThru"
                ]
              }
            },
            "required": [
              "senderMobNo",
              "remittancePurpose",
              "sourceOfFunds",
              "originCountry"
            ]
          }
        },
        "required": [
          "beneId",
          "amount",
          "transferId"
        ]
      },
      "BatchTransferRequest": {
        "title": "BatchTransferRequest",
        "description": "Batch Transfer Request",
        "type": "object",
        "properties": {
          "batchTransferId": {
            "type": "string",
            "description": "Unique Id of the Batch Transfer, alphanumeric and underscore allowed (60 character limit)"
          },
          "batchFormat": {
            "type": "string",
            "description": "Format of the batch transfers, valid values are, BENEFICIARY_ID, BANK_ACCOUNT, UPI, PAYTM, AMAZONPAY.",
            "enum": [
              "BENEFICIARY_ID",
              "BANK_ACCOUNT",
              "UPI",
              "PAYTM",
              "AMAZONPAY"
            ]
          },
          "deleteBene": {
            "type": "integer",
            "description": "Flag to delete and read new beneficiaries if a beneficiary with the same Beneficiary Id is available. When the batch transfer format is BANK_ACCOUNT"
          },
          "batch": {
            "type": "array",
            "description": "An array of transfer objects",
            "items": {
              "title": "CreateTransferBatch",
              "description": "Batch Transfer Request",
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit).",
                  "maxLength": 40
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount to be transferred. Number (>=1)"
                },
                "remarks": {
                  "type": "string",
                  "description": "Any remarks if required.",
                  "maxLength": 70
                },
                "beneId": {
                  "type": "string",
                  "description": "Beneficiary Id. Alphanumeric characters allowed.",
                  "maxLength": 50
                },
                "name": {
                  "type": "string",
                  "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed.",
                  "maxLength": 100
                },
                "email": {
                  "type": "string",
                  "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                  "maxLength": 200
                },
                "phone": {
                  "type": "string",
                  "description": "Beneficiaries phone number, phone number registered in India",
                  "maxLength": 11
                },
                "bankAccount": {
                  "type": "string",
                  "description": "Beneficiary bank account (only alphanumeric characters allowed)",
                  "maxLength": 40
                },
                "ifsc": {
                  "type": "string",
                  "description": "Accounts IFSC (standard IFSC format)",
                  "maxLength": 50
                },
                "vpa": {
                  "type": "string",
                  "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
                },
                "transferMode": {
                  "type": "string",
                  "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                }
              },
              "required": [
                "transferId",
                "amount"
              ],
              "example": {
                "amount": "1",
                "transferId": "1234",
                "remarks": "Transfer with Id 12356",
                "name": "john doe",
                "email": "johndoe@cashfree.com",
                "phone": 9876543210,
                "bankAccount": "00111122233",
                "ifsc": "HDFC0000001"
              }
            }
          }
        },
        "required": [
          "batchTransferId",
          "batchFormat",
          "batch"
        ]
      },
      "CreateTransferBatch": {
        "title": "CreateTransferBatch",
        "description": "Batch Transfer Request",
        "type": "object",
        "properties": {
          "transferId": {
            "type": "string",
            "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit).",
            "maxLength": 40
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred. Number (>=1)"
          },
          "remarks": {
            "type": "string",
            "description": "Any remarks if required.",
            "maxLength": 70
          },
          "beneId": {
            "type": "string",
            "description": "Beneficiary Id. Alphanumeric characters allowed.",
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed.",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
            "maxLength": 200
          },
          "phone": {
            "type": "string",
            "description": "Beneficiaries phone number, phone number registered in India",
            "maxLength": 11
          },
          "bankAccount": {
            "type": "string",
            "description": "Beneficiary bank account (only alphanumeric characters allowed)",
            "maxLength": 40
          },
          "ifsc": {
            "type": "string",
            "description": "Accounts IFSC (standard IFSC format)",
            "maxLength": 50
          },
          "vpa": {
            "type": "string",
            "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
          }
        },
        "required": [
          "transferId",
          "amount"
        ],
        "example": {
          "amount": "1",
          "transferId": "1234",
          "remarks": "Transfer with Id 12356",
          "name": "john doe",
          "email": "johndoe@cashfree.com",
          "phone": 9876543210,
          "bankAccount": "00111122233",
          "ifsc": "HDFC0000001"
        }
      },
      "DirectTransferRequest": {
        "title": "DirectTransferRequest",
        "description": "Direct Transfer Request",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred. Amount should be greater that INR 1.00. Decimals are allowed."
          },
          "transferId": {
            "type": "string",
            "description": "A unique ID to identify this transfer. Alphanumeric characters and underscores are allowed (40 character limit)."
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
          },
          "remarks": {
            "type": "string",
            "description": "Additional Remarks, if required."
          },
          "beneDetails": {
            "type": "object",
            "description": "Object with the beneficiary details to whom amount is to be transferred",
            "properties": {
              "beneId": {
                "type": "string",
                "description": "Beneficiary Id. Alphanumeric characters allowed."
              },
              "name": {
                "type": "string",
                "description": "Beneficiary name, only alphabets and white space (100 character limit)"
              },
              "email": {
                "type": "string",
                "description": "Beneficiary email address, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)"
              },
              "phone": {
                "type": "string",
                "description": "Beneficiary phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
              },
              "bankAccount": {
                "type": "string",
                "description": "Beneficiary bank account (9 - 18 alphanumeric character limit) (Required in case of banktransfer, imps, neft mode)"
              },
              "ifsc": {
                "type": "string",
                "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0 (Required in case of banktransfer, imps, neft mode)"
              },
              "vpa": {
                "type": "string",
                "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@) (Required in case of UPI)"
              },
              "address1": {
                "type": "string",
                "description": "Beneficiary address. Alphanumeric characters and space allowed (150 character limit)."
              },
              "address2": {
                "type": "string",
                "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
              },
              "city": {
                "type": "string",
                "description": "Beneficiary city, only alphabets and white space (50 character limit)"
              },
              "state": {
                "type": "string",
                "description": "Beneficiary state, only alphabets and white space (50 character limit)"
              },
              "pincode": {
                "type": "string",
                "description": "Beneficiaries pincode, only numbers (6 character limit)"
              }
            },
            "required": [
              "name",
              "email",
              "phone"
            ]
          }
        },
        "required": [
          "amount",
          "transferId",
          "transferMode",
          "beneDetails"
        ]
      },
      "CardPayRequest": {
        "title": "CardPayRequest",
        "description": "Card Pay Request",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount you want to transfer. Amount should be >= 1.00. Decimals are allowed."
          },
          "transferId": {
            "type": "string",
            "description": "Unique transfer ID to identify the transfer. Alphanumeric characters and underscore are allowed. The maximum character limit is 40."
          },
          "token": {
            "type": "string",
            "description": "It is the tokenised card number or card token for this transfer."
          },
          "remarks": {
            "type": "string",
            "description": "Remarks for your reference. Alphanumeric characters and whitespace are allowed. The maximum character limit is 70."
          },
          "name": {
            "type": "string",
            "description": "The name of the beneficiary who receives the transfer amount."
          },
          "networkType": {
            "type": "string",
            "description": "Specify the card type - VISA/MASTERCARD.",
            "enum": [
              "VISA",
              "MASTERCARD"
            ]
          },
          "cryptogram": {
            "type": "string",
            "description": "It contains formatted chip/cryptogram data relating to the token cryptogram. The maximum character limit is 600. It is optional for MASTERCARD and not required for VISA."
          },
          "tokenExpiry": {
            "type": "string",
            "description": "Applicable only for MASTERCARD. The format for the valid token expiry date should be YYYY-MM. It cannot be null. Provide a valid tokenExpiry if collected from the customers. If unavailable, populate a static value with a forward year and month in the correct format (YYYY-MM). The maximum character limit is 10."
          },
          "cardType": {
            "type": "string",
            "description": "Specify if it is a debit or credit card. Values allowed: DEBIT/CREDIT. CREDIT is the default value if the parameter does not exist or is not specified."
          },
          "tokenPANSequenceNumber": {
            "type": "string",
            "description": "A maximum of 3 alphanumeric characters are allowed. It is optional for MASTERCARD and not required for VISA."
          },
          "ipAddress": {
            "type": "string",
            "description": "IP Address of the caller"
          },
          "product": {
            "type": "string",
            "description": "Cashfree Product Name"
          }
        },
        "required": [
          "token",
          "amount",
          "transferId",
          "cardType"
        ]
      },
      "LendRequest": {
        "title": "LendRequest",
        "description": "Lend Request",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "It is the loan amount. It should be equal to or greater than 1.00."
          },
          "beneId": {
            "type": "string",
            "description": "It is the unique ID to identify the beneficiary. Only alphanumeric characters are allowed."
          },
          "loanId": {
            "type": "string",
            "description": "It is the unique ID to identify the loan. Only alphanumeric characters are allowed."
          },
          "remarks": {
            "type": "string"
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
          },
          "transferType": {
            "type": "string"
          },
          "serviceCharges": {
            "type": "array",
            "description": "It is the service charges that need to be disbursed to different parties.",
            "items": {
              "title": "LoanDisbursalServiceCharge",
              "description": "Loan Disbursal Service Charge",
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Service Charge Name"
                },
                "value": {
                  "type": "number",
                  "format": "double",
                  "description": "Service Charge Amount"
                }
              },
              "required": [
                "key",
                "value"
              ]
            }
          },
          "beneDetails": {
            "type": "object",
            "description": "It is the details of the beneficiary.",
            "properties": {
              "beneId": {
                "type": "string",
                "description": "Beneficiary Id. Alphanumeric characters allowed."
              },
              "name": {
                "type": "string",
                "description": "It is the name of the beneficiary. It should be a maximum of 100 characters. Only alphabets and whitespaces ( ) are allowed."
              },
              "email": {
                "type": "string",
                "description": "It is the email address of the beneficiary. A maximum of 200 characters are allowed. The value should contain @ and period (.)."
              },
              "phone": {
                "type": "string",
                "description": "It is the phone number of the beneficiary. The phone number must be registered in India. Only numeric values are allowed. It should be between 8 and 12 characters excluding +91."
              },
              "bankAccount": {
                "type": "string",
                "description": "It is the bank account of the beneficiary. It must be between 9-18 alphanumeric characters. It is a required parameter in the case of banktransfer, imps, and neft."
              },
              "ifsc": {
                "type": "string",
                "description": "The IFSC information of the bank account of the dealer/distributor who raised the invoice for the customer to pay. It should be an alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numerals."
              },
              "vpa": {
                "type": "string",
                "description": "It is the virtual payment address of the beneficiary. A maximum of 100 characters are allowed. Accepted values: alphanumeric, period (.), hyphen (-), at sign (@), underscore (). Underscore () and period (.) are accepted before and after at sign (@). Hyphen (-) is accepted only before at sign (@)."
              },
              "address1": {
                "type": "string",
                "description": "It is the address of the beneficiary. A maximum of 150 characters are allowed. Only alphanumeric values and whitespaces ( ) are allowed."
              },
              "address2": {
                "type": "string",
                "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
              },
              "city": {
                "type": "string",
                "description": "Beneficiary city, only alphabets and white space (50 character limit)"
              },
              "state": {
                "type": "string",
                "description": "Beneficiary state, only alphabets and white space (50 character limit)"
              },
              "pincode": {
                "type": "string",
                "description": "Beneficiaries pincode, only numbers (6 character limit)"
              }
            },
            "required": [
              "name",
              "email",
              "phone",
              "address1"
            ]
          }
        },
        "required": [
          "loanId",
          "serviceCharges"
        ]
      },
      "LoanDisbursalServiceCharge": {
        "title": "LoanDisbursalServiceCharge",
        "description": "Loan Disbursal Service Charge",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Service Charge Name"
          },
          "value": {
            "type": "number",
            "format": "double",
            "description": "Service Charge Amount"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "TransferRequestV12": {
        "title": "TransferRequestV12",
        "description": "Transfer Request v1.2",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "amount to be transferred. Decimals allowed (>= 1.00)"
          },
          "beneId": {
            "type": "string",
            "description": "Beneficiary Id. Alphanumeric characters allowed."
          },
          "transferId": {
            "type": "string",
            "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit)."
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
          },
          "remarks": {
            "type": "string",
            "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit)."
          },
          "transferType": {
            "type": "string",
            "description": "Transfer Type",
            "maxLength": 7
          },
          "ipAddress": {
            "type": "string",
            "description": "IP Address of the caller"
          },
          "product": {
            "type": "string",
            "description": "Cashfree Product Name"
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "Specify the fund source ID from where you want the amount to be debited."
          }
        },
        "required": [
          "beneId",
          "amount",
          "transferId"
        ]
      },
      "DirectTransferRequestV12": {
        "title": "DirectTransferRequestV12",
        "description": "Direct Transfer Request v1.2",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred. Amount should be greater that INR 1.00. Decimals are allowed."
          },
          "transferId": {
            "type": "string",
            "description": "A unique ID to identify this transfer. Alphanumeric characters and underscores are allowed (40 character limit)."
          },
          "transferMode": {
            "type": "string",
            "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
          },
          "remarks": {
            "type": "string",
            "description": "Additional Remarks, if required."
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "Specify the fund source ID from where you want the amount to be debited."
          },
          "beneDetails": {
            "type": "object",
            "description": "Object with the beneficiary details to whom amount is to be transferred",
            "properties": {
              "beneId": {
                "type": "string",
                "description": "Beneficiary Id. Alphanumeric characters allowed.",
                "maxLength": 50
              },
              "name": {
                "type": "string",
                "description": "Beneficiary name, only alphabets and white space (100 character limit)",
                "maxLength": 100
              },
              "email": {
                "type": "string",
                "description": "Beneficiary email address, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                "maxLength": 200
              },
              "phone": {
                "type": "string",
                "description": "Beneficiary phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
              },
              "bankAccount": {
                "type": "string",
                "description": "Beneficiary bank account (9 - 18 alphanumeric character limit) (Required in case of banktransfer, imps, neft mode)",
                "maxLength": 40
              },
              "ifsc": {
                "type": "string",
                "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0 (Required in case of banktransfer, imps, neft mode)",
                "maxLength": 50
              },
              "vpa": {
                "type": "string",
                "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@) (Required in case of UPI)",
                "maxLength": 100
              },
              "address1": {
                "type": "string",
                "description": "Beneficiary address. Alphanumeric characters and space allowed (150 character limit)."
              },
              "address2": {
                "type": "string",
                "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
              },
              "city": {
                "type": "string",
                "description": "Beneficiary city, only alphabets and white space (50 character limit)"
              },
              "state": {
                "type": "string",
                "description": "Beneficiary state, only alphabets and white space (50 character limit)"
              },
              "pincode": {
                "type": "string",
                "description": "Beneficiaries pincode, only numbers (6 character limit)",
                "maxLength": 6
              }
            }
          }
        },
        "required": [
          "amount",
          "transferId",
          "transferMode",
          "beneDetails"
        ]
      },
      "BatchTransferRequestV12": {
        "title": "BatchTransferRequestV12",
        "description": "Batch Transfer Request v1.2",
        "type": "object",
        "properties": {
          "batchTransferId": {
            "type": "string",
            "description": "Unique Id of the Batch Transfer, alphanumeric and underscore allowed (60 character limit)"
          },
          "batchFormat": {
            "type": "string",
            "description": "Format of the batch transfers, valid values are, BENEFICIARY_ID, BANK_ACCOUNT, UPI, PAYTM, AMAZONPAY.",
            "enum": [
              "BENEFICIARY_ID",
              "BANK_ACCOUNT",
              "UPI",
              "PAYTM",
              "AMAZONPAY"
            ]
          },
          "deleteBene": {
            "type": "integer",
            "description": "Flag to delete and read new beneficiaries if a beneficiary with the same Beneficiary Id is available. When the batch transfer format is BANK_ACCOUNT"
          },
          "paymentInstrumentId": {
            "type": "string",
            "description": "Specify the payment instrument from where you want the amount to be debited."
          },
          "batch": {
            "type": "array",
            "description": "An array of transfer objects",
            "items": {
              "title": "CreateTransferBatch",
              "description": "Batch Transfer Request",
              "type": "object",
              "properties": {
                "transferId": {
                  "type": "string",
                  "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit).",
                  "maxLength": 40
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount to be transferred. Number (>=1)"
                },
                "remarks": {
                  "type": "string",
                  "description": "Any remarks if required.",
                  "maxLength": 70
                },
                "beneId": {
                  "type": "string",
                  "description": "Beneficiary Id. Alphanumeric characters allowed.",
                  "maxLength": 50
                },
                "name": {
                  "type": "string",
                  "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed.",
                  "maxLength": 100
                },
                "email": {
                  "type": "string",
                  "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                  "maxLength": 200
                },
                "phone": {
                  "type": "string",
                  "description": "Beneficiaries phone number, phone number registered in India",
                  "maxLength": 11
                },
                "bankAccount": {
                  "type": "string",
                  "description": "Beneficiary bank account (only alphanumeric characters allowed)",
                  "maxLength": 40
                },
                "ifsc": {
                  "type": "string",
                  "description": "Accounts IFSC (standard IFSC format)",
                  "maxLength": 50
                },
                "vpa": {
                  "type": "string",
                  "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
                },
                "transferMode": {
                  "type": "string",
                  "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                }
              },
              "required": [
                "transferId",
                "amount"
              ],
              "example": {
                "amount": "1",
                "transferId": "1234",
                "remarks": "Transfer with Id 12356",
                "name": "john doe",
                "email": "johndoe@cashfree.com",
                "phone": 9876543210,
                "bankAccount": "00111122233",
                "ifsc": "HDFC0000001"
              }
            }
          }
        },
        "required": [
          "batchTransferId",
          "batchFormat",
          "batch"
        ]
      },
      "CashgramCreateRequest": {
        "title": "CashgramCreateRequest",
        "description": "Cashgram Create Request",
        "type": "object",
        "properties": {
          "cashgramId": {
            "type": "string",
            "description": "Unique Id of the Cashgram. Alphanumeric, underscore (_), and hyphen (-) allowed (35 character limit)",
            "maxLength": 36
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Amount to be transferred, >= 1.00"
          },
          "name": {
            "type": "string",
            "description": "Name of the contact",
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "description": "Email of the contact",
            "maxLength": 200
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact"
          },
          "linkExpiry": {
            "type": "string",
            "description": "Date to expire the cashgram link, Date format YYYY/MM/DD, maximum 30 days from the date of creation.",
            "maxLength": 10
          },
          "remarks": {
            "type": "string",
            "description": "Specify remarks, if any."
          },
          "notifyCustomer": {
            "type": "integer",
            "description": "If value is 1, a link is sent to customers phone and email."
          },
          "validateAccount": {
            "type": "integer",
            "description": "Binary value (0,1) to decide whether to validate account or not"
          },
          "payoutType": {
            "type": "string",
            "description": "Payout Type"
          },
          "description": {
            "type": "string",
            "description": "Description of the cashgram"
          }
        },
        "required": [
          "cashgramId",
          "amount",
          "name",
          "phone",
          "linkExpiry"
        ]
      },
      "CashgramDeactivateRequest": {
        "title": "CashgramDeactivateRequest",
        "description": "Cashgram Deactivate Request",
        "type": "object",
        "properties": {
          "cashgramId": {
            "type": "string",
            "description": "ID of the Cashgram to be deactivated. Alphanumeric and underscore (_) allowed (35 character limit)",
            "maxLength": 35
          }
        },
        "required": [
          "cashgramId"
        ]
      },
      "AddBeneficiaryRequestV2": {
        "title": "AddBeneficiaryRequestV2",
        "description": "Request Body for adding a new beneficiary",
        "type": "object",
        "properties": {
          "beneficiaryId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "ifsc": {
            "type": "string"
          },
          "vpa": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string"
              },
              "addressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pincode": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "beneficiaryId": "JOHN18011343",
          "name": "john doe",
          "email": "johndoe@cashfree.com",
          "phone": "9876543210",
          "bankAccount": "00111122233",
          "ifsc": "HDFC0000001",
          "vpa": "test@upi",
          "address": {
            "addressLine1": "ABC Road",
            "addressLine2": "XYZ Layout",
            "city": "Bangalore",
            "state": "Karnataka",
            "pincode": "560001"
          }
        }
      },
      "GenericAPIResponse": {
        "title": "GenericAPIResponse",
        "description": "Generic API Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "AuthorizeResponse": {
        "title": "AuthorizeResponse",
        "description": "Response for generating Bearer Token",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "expiry": {
                "type": "integer"
              }
            }
          }
        }
      },
      "VerifyTokenResponse": {
        "title": "VerifyTokenResponse",
        "description": "Response for verifying Bearer Token",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          }
        },
        "example": {
          "status": "SUCCESS",
          "message": "Token is valid",
          "subCode": "200"
        }
      },
      "AddBeneficiaryResponse": {
        "title": "AddBeneficiaryResponse",
        "description": "Response for creating new Beneficiary",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          }
        }
      },
      "GetBeneficiaryResponse": {
        "title": "GetBeneficiaryResponse",
        "description": "Response for getting Beneficiary by id",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "beneId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "address1": {
                "type": "string"
              },
              "address2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "pincode": {
                "type": "string"
              },
              "bankAccount": {
                "type": "string"
              },
              "ifsc": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "vpa": {
                "type": "string"
              },
              "addedOn": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetBeneficiaryIDResponse": {
        "title": "GetBeneficiaryIDResponse",
        "description": "Response for getting Beneficiary id by bank account and ifsc",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "beneId": {
                "type": "string"
              }
            }
          }
        }
      },
      "RemoveBeneficiaryResponse": {
        "title": "RemoveBeneficiaryResponse",
        "description": "Response for removing Beneficiary",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          }
        }
      },
      "BeneficiaryHistoryResponse": {
        "title": "BeneficiaryHistoryResponse",
        "description": "Response for fetching Beneficiary history",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "transfers": {
                "type": "array",
                "items": {
                  "title": "BeneficiaryTransfer",
                  "description": "Beneficiary Transfer Object",
                  "type": "object",
                  "properties": {
                    "transferDate": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "mode": {
                      "type": "string"
                    },
                    "beneId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "transferDate": "2020-06-16",
                    "amount": "1",
                    "mode": "IMPS",
                    "beneId": "John Doe",
                    "status": "SUCCESS"
                  }
                }
              }
            }
          }
        }
      },
      "BeneficiaryTransfer": {
        "title": "BeneficiaryTransfer",
        "description": "Beneficiary Transfer Object",
        "type": "object",
        "properties": {
          "transferDate": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "beneId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "transferDate": "2020-06-16",
          "amount": "1",
          "mode": "IMPS",
          "beneId": "John Doe",
          "status": "SUCCESS"
        }
      },
      "BalanceResponse": {
        "title": "BalanceResponse",
        "description": "Balance Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "balance": {
                "type": "number",
                "format": "double"
              },
              "availableBalance": {
                "type": "string"
              }
            }
          }
        }
      },
      "SelfWithdrawalResponse": {
        "title": "SelfWithdrawalResponse",
        "description": "Self Withdrawal Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InternalTransferResponse": {
        "title": "InternalTransferResponse",
        "description": "Internal Transfer Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "transferId": {
                "type": "string"
              }
            }
          }
        }
      },
      "TransferResponse": {
        "title": "TransferResponse",
        "description": "Transfer Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "referenceId": {
                "type": "string"
              },
              "utr": {
                "type": "string"
              },
              "acknowledged": {
                "type": "integer"
              }
            }
          }
        }
      },
      "TransferAsyncResponse": {
        "title": "TransferAsyncResponse",
        "description": "Transfer Async Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "referenceId": {
                "type": "string"
              }
            }
          }
        }
      },
      "GetTransferStatusResponse": {
        "title": "GetTransferStatusResponse",
        "description": "Transfer Status Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "transfer": {
                "type": "object",
                "properties": {
                  "transferId": {
                    "type": "string"
                  },
                  "referenceId": {
                    "type": "string"
                  },
                  "bankAccount": {
                    "type": "string"
                  },
                  "ifsc": {
                    "type": "string"
                  },
                  "beneId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double"
                  },
                  "status": {
                    "type": "string"
                  },
                  "utr": {
                    "type": "string"
                  },
                  "addedOn": {
                    "type": "string"
                  },
                  "processedOn": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "transferMode": {
                    "type": "string"
                  },
                  "acknowledged": {
                    "type": "integer"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "vpa": {
                    "type": "string"
                  },
                  "paymentInstrumentId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "BatchTransferStatusResponse": {
        "title": "BatchTransferStatusResponse",
        "description": "Batch Transfer Status Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "rowCount": {
                "type": "integer"
              },
              "referenceId": {
                "type": "integer"
              },
              "transfers": {
                "type": "array",
                "items": {
                  "title": "BatchTransferEntry",
                  "description": "Batch Transfer",
                  "type": "object",
                  "properties": {
                    "transferId": {
                      "type": "string"
                    },
                    "paymentInstrumentId": {
                      "type": "string"
                    },
                    "beneId": {
                      "type": "string"
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "bankAccount": {
                      "type": "string"
                    },
                    "ifsc": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "remarks": {
                      "type": "string"
                    },
                    "utr": {
                      "type": "string"
                    },
                    "addedOn": {
                      "type": "string"
                    },
                    "processedOn": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "failureReason": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "beneId": "9999999999_18875",
                    "transferId": "PTM_00052312126",
                    "referenceId": 1523969543,
                    "bankAccount": "9999999999",
                    "ifsc": "PYTM0000001",
                    "amount": "12.00",
                    "remarks": "",
                    "status": "SUCCESS",
                    "utr": "W1532082926",
                    "addedOn": "2018-07-20",
                    "processedOn": "2018-07-20"
                  }
                }
              }
            }
          }
        }
      },
      "BatchTransferEntry": {
        "title": "BatchTransferEntry",
        "description": "Batch Transfer",
        "type": "object",
        "properties": {
          "transferId": {
            "type": "string"
          },
          "paymentInstrumentId": {
            "type": "string"
          },
          "beneId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "ifsc": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "remarks": {
            "type": "string"
          },
          "utr": {
            "type": "string"
          },
          "addedOn": {
            "type": "string"
          },
          "processedOn": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "failureReason": {
            "type": "string"
          }
        },
        "example": {
          "beneId": "9999999999_18875",
          "transferId": "PTM_00052312126",
          "referenceId": 1523969543,
          "bankAccount": "9999999999",
          "ifsc": "PYTM0000001",
          "amount": "12.00",
          "remarks": "",
          "status": "SUCCESS",
          "utr": "W1532082926",
          "addedOn": "2018-07-20",
          "processedOn": "2018-07-20"
        }
      },
      "BatchTransferStatusResponseV12": {
        "title": "BatchTransferStatusResponseV12",
        "description": "Batch Transfer Status Response v1.2",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "rowCount": {
                "type": "integer"
              },
              "referenceId": {
                "type": "integer"
              },
              "paymentInstrumentId": {
                "type": "string"
              },
              "transfers": {
                "type": "array",
                "items": {
                  "title": "BatchTransferEntryV12",
                  "description": "Batch Transfer v1.2",
                  "type": "object",
                  "properties": {
                    "transferId": {
                      "type": "string"
                    },
                    "beneId": {
                      "type": "string"
                    },
                    "referenceId": {
                      "type": "string"
                    },
                    "bankAccount": {
                      "type": "string"
                    },
                    "ifsc": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double"
                    },
                    "remarks": {
                      "type": "string"
                    },
                    "utr": {
                      "type": "string"
                    },
                    "addedOn": {
                      "type": "string"
                    },
                    "processedOn": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "failureReason": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "beneId": "9999999999_18875",
                    "transferId": "PTM_00121241112",
                    "referenceId": 1523969542,
                    "bankAccount": "9999999999",
                    "ifsc": "PYTM0000001",
                    "amount": "12.00",
                    "remarks": "",
                    "status": "SUCCESS",
                    "utr": "W1532082925",
                    "addedOn": "2018-07-20",
                    "processedOn": "2018-07-20"
                  }
                }
              }
            }
          }
        },
        "example": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Data retrieved successfully",
          "data": {
            "rowCount": 2,
            "referenceId": 1582,
            "paymentInstrumentId": "CASHFREE_1",
            "transfers": [
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00121241112",
                "referenceId": 1523969542,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082925",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              },
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00052312126",
                "referenceId": 1523969543,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082926",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              }
            ]
          }
        }
      },
      "BatchTransferEntryV12": {
        "title": "BatchTransferEntryV12",
        "description": "Batch Transfer v1.2",
        "type": "object",
        "properties": {
          "transferId": {
            "type": "string"
          },
          "beneId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "bankAccount": {
            "type": "string"
          },
          "ifsc": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "remarks": {
            "type": "string"
          },
          "utr": {
            "type": "string"
          },
          "addedOn": {
            "type": "string"
          },
          "processedOn": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "failureReason": {
            "type": "string"
          }
        },
        "example": {
          "beneId": "9999999999_18875",
          "transferId": "PTM_00121241112",
          "referenceId": 1523969542,
          "bankAccount": "9999999999",
          "ifsc": "PYTM0000001",
          "amount": "12.00",
          "remarks": "",
          "status": "SUCCESS",
          "utr": "W1532082925",
          "addedOn": "2018-07-20",
          "processedOn": "2018-07-20"
        }
      },
      "CashgramCreateResponse": {
        "title": "CashgramCreateResponse",
        "description": "Cashgram Create Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "referenceId": {
                "type": "integer"
              },
              "cashgramLink": {
                "type": "string"
              }
            }
          }
        }
      },
      "CashgramStatusResponse": {
        "title": "CashgramStatusResponse",
        "description": "Cashgram Status Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "cashgramStatus": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "referenceId": {
                "type": "integer"
              },
              "cashgramId": {
                "type": "string"
              },
              "cashgramLink": {
                "type": "string"
              },
              "redeemRefId": {
                "type": "integer"
              },
              "utr": {
                "type": "string"
              }
            }
          }
        }
      },
      "CashgramDeactivateResponse": {
        "title": "CashgramDeactivateResponse",
        "description": "Response for deactivating a cashgram",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          }
        }
      },
      "BeneficiaryDetailsResponseV2": {
        "title": "BeneficiaryDetailsResponseV2",
        "description": "Beneficiary Details Response V2",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "beneficiaryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "groupName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "bankAccount": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "pincode": {
                    "type": "string"
                  }
                }
              },
              "ifsc": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "vpa": {
                "type": "string"
              },
              "addedOn": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "success": true,
          "code": "Ok",
          "message": "Beneficiary details retrieved successfully",
          "data": {}
        }
      },
      "GetIncidentsResponse": {
        "title": "GetIncidentsResponse",
        "description": "Response for getting incidents",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "subCode": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "incidents": {
                "type": "array",
                "items": {
                  "title": "IncidentExternal",
                  "description": "External Incident",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    },
                    "entity": {
                      "type": "string"
                    },
                    "mode": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "resolvedAt": {
                      "type": "string"
                    },
                    "isScheduled": {
                      "type": "boolean"
                    },
                    "isResolved": {
                      "type": "boolean"
                    },
                    "impact": {
                      "type": "string"
                    },
                    "entityName": {
                      "type": "string"
                    },
                    "entityCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IncidentExternal": {
        "title": "IncidentExternal",
        "description": "External Incident",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "resolvedAt": {
            "type": "string"
          },
          "isScheduled": {
            "type": "boolean"
          },
          "isResolved": {
            "type": "boolean"
          },
          "impact": {
            "type": "string"
          },
          "entityName": {
            "type": "string"
          },
          "entityCode": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "xRequestIDHeader": {
        "in": "header",
        "name": "x-request-id",
        "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
      }
    },
    "requestBodies": {
      "TransferRequestV12": {
        "description": "Request body to create a transfer",
        "content": {
          "application/json": {
            "schema": {
              "title": "TransferRequestV12",
              "description": "Transfer Request v1.2",
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "amount to be transferred. Decimals allowed (>= 1.00)"
                },
                "beneId": {
                  "type": "string",
                  "description": "Beneficiary Id. Alphanumeric characters allowed."
                },
                "transferId": {
                  "type": "string",
                  "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit)."
                },
                "transferMode": {
                  "type": "string",
                  "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                },
                "remarks": {
                  "type": "string",
                  "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit)."
                },
                "transferType": {
                  "type": "string",
                  "description": "Transfer Type",
                  "maxLength": 7
                },
                "ipAddress": {
                  "type": "string",
                  "description": "IP Address of the caller"
                },
                "product": {
                  "type": "string",
                  "description": "Cashfree Product Name"
                },
                "paymentInstrumentId": {
                  "type": "string",
                  "description": "Specify the fund source ID from where you want the amount to be debited."
                }
              },
              "required": [
                "beneId",
                "amount",
                "transferId"
              ]
            },
            "examples": {
              "transfer_request_v12_imps": {
                "summary": "Transfer Request v1.2 with transfer mode IMPS",
                "description": "Transfer Request v1.2 with transfer mode IMPS",
                "value": {
                  "beneId": "JOHN18012",
                  "amount": "15.00",
                  "transferId": "JUNOB2018",
                  "transferMode": "IMPS"
                }
              },
              "transfer_request_v12_paymentInstrumentId": {
                "summary": "Transfer Request v1.2 with payment instrument id",
                "description": "Transfer Request v1.2 with payment instrument id",
                "value": {
                  "beneId": "MAC27122",
                  "amount": "15.00",
                  "transferId": "APROB2019",
                  "paymentInstrumentId": "ICICI_TEST_2012"
                }
              }
            }
          }
        }
      }
    },
    "responses": {},
    "examples": {
      "transfer_request_v12_imps": {
        "summary": "Transfer Request v1.2 with transfer mode IMPS",
        "description": "Transfer Request v1.2 with transfer mode IMPS",
        "value": {
          "beneId": "JOHN18012",
          "amount": "15.00",
          "transferId": "JUNOB2018",
          "transferMode": "IMPS"
        }
      },
      "transfer_request_v12_paymentInstrumentId": {
        "summary": "Transfer Request v1.2 with payment instrument id",
        "description": "Transfer Request v1.2 with payment instrument id",
        "value": {
          "beneId": "MAC27122",
          "amount": "15.00",
          "transferId": "APROB2019",
          "paymentInstrumentId": "ICICI_TEST_2012"
        }
      },
      "add_beneficiary_request": {
        "summary": "Create Beneficiary Request",
        "description": "Request Body for adding a new beneficiary",
        "value": {
          "beneId": "JOHN18011343",
          "name": "john doe",
          "email": "johndoe@cashfree.com",
          "phone": "9876543210",
          "bankAccount": "00111122233",
          "ifsc": "HDFC0000001",
          "vpa": "test@upi",
          "address1": "ABC Road",
          "address2": "XYZ Layout",
          "city": "Bangalore",
          "state": "Karnataka",
          "pincode": "560001"
        }
      },
      "remove_beneficiary_request": {
        "summary": "Remove Beneficiary Request",
        "description": "Remove Beneficiary Request",
        "value": {
          "beneId": "JOHN18011343"
        }
      },
      "self_withdrawal_request": {
        "summary": "Self Withdrawal Request",
        "description": "Request Body for doing self-withdrawal",
        "value": {
          "withdrawalId": "1",
          "amount": 20
        }
      },
      "internal_transfer_request": {
        "summary": "Internal Transfer Request",
        "description": "Request Body for doing internal transfer",
        "value": {
          "amount": 10.5,
          "rechargeAccount": "492372992"
        }
      },
      "internal_transfer_request_v12": {
        "summary": "Internal Transfer Request v1.2",
        "description": "Request Body for doing internal transfer v1.2",
        "value": {
          "toPaymentInstrumentId": "COLENDING_WALLET_336561_8888981",
          "paymentInstrumentId": "COLENDING_WALLET_336561_8888982",
          "amount": 10.5,
          "remarks": "some remarks",
          "transferId": "testingw123"
        }
      },
      "transfer_request": {
        "summary": "Transfer Request",
        "description": "Request Body for making a transfer",
        "value": {
          "beneId": "JOHN18011",
          "amount": "1.00",
          "transferId": "JUNOB2018"
        }
      },
      "direct_transfer_request": {
        "summary": "Direct Transfer Request",
        "description": "Request Body for making a transfer with beneficiary bank account details",
        "value": {
          "amount": 30,
          "transferId": "JUNOB2018142",
          "transferMode": "banktransfer",
          "remarks": "test",
          "beneDetails": {
            "bankAccount": "026291800001191",
            "ifsc": "YESB0000262",
            "name": "Ranjiths",
            "email": "ranjiths@cashfree.com",
            "phone": "9999999999",
            "address1": "any_dummy_value"
          }
        }
      },
      "batch_transfer_request": {
        "summary": "Batch Transfer Request",
        "description": "Request Body for making a batch transfer",
        "value": {
          "batchTransferId": "abc-12356",
          "batchFormat": "BANK_ACCOUNT",
          "batch": [
            {
              "amount": "1",
              "transferId": "1234",
              "remarks": "Transfer with Id 12356",
              "name": "john doe",
              "email": "johndoe@cashfree.com",
              "phone": 9876543210,
              "bankAccount": "00111122233",
              "ifsc": "HDFC0000001"
            }
          ]
        }
      },
      "card_pay_request": {
        "summary": "Card Pay Request",
        "description": "Request Body for making transfer to a card",
        "value": {
          "token": "4640837720072836",
          "amount": 1.2,
          "transferId": "cardpay_11",
          "remarks": "Transfer to card",
          "name": "John Doe",
          "networkType": "VISA",
          "tokenExpiry": "2026-07",
          "cardType": "CREDIT"
        }
      },
      "lend_request_with_beneId": {
        "summary": "Lend Request with Beneficiary ID",
        "description": "Request body for loan disbursement to beneficiary with beneficiary id",
        "value": {
          "beneId": "bene1",
          "loanId": "laon1",
          "amount": "1000",
          "transferMode": "imps",
          "serviceCharges": [
            {
              "key": "something",
              "value": "50"
            }
          ]
        }
      },
      "lend_request_with_bene_details": {
        "summary": "Lend Request with beneficiary details",
        "description": "Request body for loan disbursement to beneficiary with beneficiary details",
        "value": {
          "loanId": "laon1",
          "amount": "1000",
          "transferMode": "imps",
          "serviceCharges": [
            {
              "key": "something",
              "value": "50"
            }
          ],
          "beneDetails": {
            "name": "Test",
            "email": "test@cashfree.com",
            "phone": "8765434569",
            "address1": "xyz",
            "vpa": "success@upi"
          }
        }
      },
      "transfer_request_v12": {
        "summary": "Transfer Request v1.2",
        "description": "Transfer Request v1.2",
        "value": {
          "beneId": "JOHN18011",
          "amount": "1.00",
          "transferId": "JUNOB2018"
        }
      },
      "direct_transfer_v12": {
        "summary": "Direct Transfer Request v1.2",
        "description": "Request Body for making a transfer with beneficiary bank account details v1.2",
        "value": {
          "amount": 30,
          "transferId": "JUNOB2018142",
          "transferMode": "banktransfer",
          "remarks": "test",
          "beneDetails": {
            "bankAccount": "026291800001191",
            "ifsc": "YESB0000262",
            "name": "Ranjiths",
            "email": "ranjiths@cashfree.com",
            "phone": "9999999999",
            "address1": "any_dummy_value"
          },
          "paymentInstrumentId": "YESB_CONNECTED"
        }
      },
      "batch_transfer_request_v12": {
        "summary": "Batch Transfer Request v1.2",
        "description": "Request Body for making a batch transfer v1.2",
        "value": {
          "batchTransferId": "batch_req_21",
          "batchFormat": "BANK_ACCOUNT",
          "deleteBene": 0,
          "batch": [
            {
              "transferId": "TransferID1",
              "amount": "10",
              "bankAccount": "7766666351004",
              "ifsc": "YESB0000001",
              "phone": "9999999998",
              "email": "test@gmail.com",
              "name": "Transfer1"
            },
            {
              "transferId": "TransferID2",
              "amount": "10",
              "bankAccount": "7766666351004",
              "ifsc": "YESB0000001",
              "phone": "9999999998",
              "email": "test@gmail.com",
              "name": "Transfer2"
            }
          ],
          "paymentInstrumentId": "IBL_CONNECTED"
        }
      },
      "create_cashgram_request": {
        "summary": "Create Cashgram Request",
        "description": "Request Body for creating a new cashgram",
        "value": {
          "cashgramId": "JOHaN10",
          "amount": "1.00",
          "name": "John Doe",
          "email": "johndoe@cashfree.com",
          "phone": "9876543210",
          "linkExpiry": "2020/04/01",
          "remarks": "sample cashgram",
          "notifyCustomer": 1
        }
      },
      "deactivate_cashgram_request": {
        "summary": "Deactivate Cashgram Request",
        "description": "Request Body for deactivating a cashgram",
        "value": {
          "cashgramId": "JOHaN10"
        }
      },
      "authorize_response": {
        "summary": "Authorize Success Response",
        "description": "Authorize Success Response",
        "value": {
          "status": "SUCCESS",
          "message": "Token generated",
          "subCode": "200",
          "data": {
            "token": "eyJ0eXA...fWStg",
            "expiry": 1564130052
          }
        }
      },
      "add_beneficiary_response": {
        "summary": "New Beneficiary created",
        "description": "New Beneficiary created",
        "value": {
          "status": "SUCCESS",
          "message": "Beneficiary added successfully",
          "subCode": "200"
        }
      },
      "get_beneficiary_response": {
        "summary": "Beneficiary details fetched successfully",
        "description": "Beneficiary details fetched successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of beneficiary",
          "data": {
            "beneId": "JOHN18011",
            "name": "John",
            "groupName": "DEFAULT",
            "email": "johndoe@cashfree.com",
            "phone": "9876543210",
            "address1": "ABCavenue",
            "address2": "",
            "city": "Bangalore",
            "state": "Karnataka",
            "pincode": "0",
            "bankAccount": "00001111222233",
            "ifsc": "HDFC0000001",
            "status": "VERIFIED",
            "vpa": "test@upi",
            "addedOn": "2022-10-12 15:23:00"
          }
        }
      },
      "get_beneficiary_id_response": {
        "summary": "Get Beneficiary Details by bank details",
        "description": "Get Beneficiary Details by bank details",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "beneId retrieved successfully",
          "data": {
            "beneId": "JOHN18011"
          }
        }
      },
      "remove_beneficiary_response": {
        "summary": "Beneficiary Removed Successfully",
        "description": "Beneficiary Removed Successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Beneficiary removed"
        }
      },
      "beneficiary_history_response": {
        "summary": "Beneficiary Transfer History fetched successfully",
        "description": "Beneficiary Transfer History fetched successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Data retrieved successfully",
          "data": {
            "transfers": [
              {
                "transferDate": "2020-06-16",
                "amount": "1",
                "mode": "IMPS",
                "beneId": "John Doe",
                "status": "SUCCESS"
              },
              {
                "transferDate": "2020-05-28",
                "amount": "1",
                "mode": "NEFT",
                "beneId": "John Doe",
                "status": "SUCCESS"
              },
              {
                "transferDate": "2020-05-15",
                "amount": "1.1",
                "mode": "IMPS",
                "beneId": "John Doe",
                "status": "SUCCESS"
              },
              {
                "transferDate": "2020-05-15",
                "amount": "1.1",
                "mode": "IMPS",
                "beneId": "John Doe",
                "status": "SUCCESS"
              },
              {
                "transferDate": "2020-05-15",
                "amount": "1",
                "mode": "IMPS",
                "beneId": "John Doe",
                "status": "SUCCESS"
              }
            ]
          }
        }
      },
      "get_balance_response": {
        "summary": "Account Balance fetched successfully",
        "description": "Account Balance fetched successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Ledger balance for the account",
          "data": {
            "balance": "214735.50",
            "availableBalance": "173980.50"
          }
        }
      },
      "self_withdrawal_response": {
        "summary": "Self Withdrawal initiated successfully",
        "description": "Self Withdrawal initiated successfully",
        "value": {
          "status": "SUCCESS",
          "message": "Withdrawal is in process. Withdrawal Id : W55",
          "statusCode": "200"
        }
      },
      "internal_transfer_response": {
        "summary": "Internal Transfer Success Response",
        "description": "Internal Transfer Success Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "RefId-a0302c78d13142b89d85af472961901528/006291823001146-Internal Fund Transfer",
          "data": {
            "transferId": "a0302c78d13142b89d85af472961901528"
          }
        }
      },
      "internal_transfer_response_v12": {
        "summary": "Internal Transfer Success Response v1.2",
        "description": "Internal Transfer Success Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "RefId-testingw123/some remarks-Internal Fund Transfer",
          "data": {
            "transferId": "123"
          }
        }
      },
      "transfer_completed_response": {
        "summary": "Transfer completed successfully",
        "description": "Transfer completed successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Transfer completed successfully",
          "data": {
            "referenceId": "10023",
            "utr": "P16111765023806",
            "acknowledged": 1
          }
        }
      },
      "transfer_scheduled_response": {
        "summary": "Transfer Scheduled for next working day",
        "description": "Transfer Scheduled for next working day",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Transfer Scheduled for next working day",
          "data": {
            "referenceId": "10023",
            "utr": "",
            "acknowledged": 0
          }
        }
      },
      "awaiting_bene_bank_confirmation_response": {
        "summary": "Awaiting confirmation from beneficiary bank",
        "description": "Awaiting confirmation from beneficiary bank",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Awaiting confirmation from beneficiary bank",
          "data": {
            "referenceId": "10023",
            "utr": "",
            "acknowledged": 0
          }
        }
      },
      "transfer_pending_at_bank_response": {
        "summary": "Transfer request pending at the bank",
        "description": "Transfer request pending at the bank",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Transfer request pending at the bank",
          "data": {
            "referenceId": "10023",
            "utr": "",
            "acknowledged": 0
          }
        }
      },
      "transfer_request_received_response": {
        "summary": "Request received. Please check status after some time.",
        "description": "Request received. Please check status after some time.",
        "value": {
          "status": "PENDING",
          "subCode": "202",
          "message": "Request received. Please check status after some time.",
          "data": {
            "referenceId": "10023",
            "utr": "",
            "acknowledged": 0
          }
        }
      },
      "async_transfer_initiated_response": {
        "summary": "Transfer Initiated successfully",
        "description": "Transfer Initiated successfully",
        "value": {
          "status": "ACCEPTED",
          "subCode": "201",
          "message": "Transfer Initiated",
          "data": {
            "referenceId": "107260"
          }
        }
      },
      "async_transfer_scheduled_response": {
        "summary": "Transfer Scheduled for next working day",
        "description": "Transfer Scheduled for next working day",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Transfer Scheduled for next working day",
          "data": {
            "referenceId": "10023"
          }
        }
      },
      "async_awaiting_bene_bank_confirmation_response": {
        "summary": "Awaiting confirmation from beneficiary bank",
        "description": "Awaiting confirmation from beneficiary bank",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Awaiting confirmation from beneficiary bank",
          "data": {
            "referenceId": "10023"
          }
        }
      },
      "async_transfer_pending_at_bank_response": {
        "summary": "Transfer request pending at the bank",
        "description": "Transfer request pending at the bank",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Transfer request pending at the bank",
          "data": {
            "referenceId": "10023"
          }
        }
      },
      "async_transfer_request_received_response": {
        "summary": "Request received. Please check status after some time.",
        "description": "Request received. Please check status after some time.",
        "value": {
          "status": "PENDING",
          "subCode": "202",
          "message": "Request received. Please check status after some time.",
          "data": {
            "referenceId": "10023"
          }
        }
      },
      "transfer_status_success_response": {
        "summary": "Transfer completed successfully",
        "description": "Transfer completed successfully",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 200223467",
          "data": {
            "transfer": {
              "transferId": "sample01139",
              "bankAccount": "000810139000385",
              "ifsc": "YESB0MAN001",
              "beneId": "test_bene",
              "amount": "1.2",
              "status": "SUCCESS",
              "utr": "N351200478962883",
              "addedOn": "2020-12-16 09:17:41",
              "processedOn": "2020-12-16 09:17:42",
              "transferMode": "BANK",
              "acknowledged": 1
            }
          }
        }
      },
      "transfer_status_failed_response": {
        "summary": "Transfer Failed",
        "description": "Transfer Failed",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 195460327",
          "data": {
            "transfer": {
              "transferId": "1025fca380442d98",
              "bankAccount": "20274048860",
              "ifsc": "SBIN0002207",
              "beneId": "TEST1234",
              "amount": "1.1",
              "status": "FAILED",
              "addedOn": "2020-12-04 18:52:12",
              "processedOn": "2020-12-04 19:07:13",
              "reason": "BENEFICIARY_BANK_OFFLINE",
              "transferMode": "BANK",
              "acknowledged": 0
            }
          }
        }
      },
      "batch_transfer_response": {
        "summary": "Batch Transfer Response",
        "description": "Batch Transfer Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Request accepted",
          "data": {
            "referenceId": 1594
          }
        }
      },
      "batch_transfer_pending_response": {
        "summary": "Batch Transfer Pending Response",
        "description": "Batch Transfer Pending Response",
        "value": {
          "status": "PENDING",
          "subCode": "202",
          "message": "Request received. Please check status after some time.",
          "data": {
            "referenceId": 1594
          }
        }
      },
      "batch_transfer_status_response": {
        "summary": "Batch Transfer Status Response",
        "description": "Batch Transfer Status Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Data retrieved successfully",
          "data": {
            "rowCount": 2,
            "referenceId": 1582,
            "transfers": [
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00121241112",
                "referenceId": 1523969542,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082925",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              },
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00052312126",
                "referenceId": 1523969543,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082926",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              }
            ]
          }
        }
      },
      "batch_transfer_status_pending_response": {
        "summary": "Batch Transfer Status Pending Response",
        "description": "Batch Transfer Status Pending Response",
        "value": {
          "status": "PENDING",
          "subCode": "201",
          "message": "Entries are not processed yet"
        }
      },
      "get_transfer_status_success_response": {
        "summary": "Get Transfer Status Success Response v1.2",
        "description": "Get Transfer Status Success Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 23457200",
          "data": {
            "transfer": {
              "transferId": "javasdktesttransferid120793",
              "bankAccount": "7766671501729",
              "ifsc": "SBIN0000003",
              "beneId": "johndoevalid983",
              "amount": "1",
              "status": "SUCCESS",
              "utr": "0470445059841910",
              "addedOn": "2021-11-24 13:39:25",
              "processedOn": "2021-11-24 13:40:27",
              "transferMode": "BANK",
              "acknowledged": 1,
              "phone": "9876543210",
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_transfer_status_pending_response": {
        "summary": "Get Transfer Status Pending Response v1.2",
        "description": "Get Transfer Status Pending Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 403010",
          "data": {
            "transfer": {
              "transferId": "test_transfer12",
              "bankAccount": "007711000031",
              "ifsc": "HDFC0000077",
              "beneId": "7221085558_1636419207",
              "amount": "20",
              "status": "PENDING",
              "addedOn": "2021-11-15 17:20:30",
              "processedOn": "2021-11-15 17:20:30",
              "transferMode": "BANK",
              "acknowledged": 0,
              "phone": "7221085558",
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_transfer_status_failed_response": {
        "summary": "Get Transfer Status Failed Response v1.2",
        "description": "Get Transfer Status Failed Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 411914",
          "data": {
            "transfer": {
              "transferId": "async_test_869",
              "beneId": "",
              "amount": "1",
              "status": "FAILED",
              "addedOn": "2021-11-22 13:43:04",
              "processedOn": "2021-11-22 13:43:05",
              "reason": "INVALID_ACCOUNT_FAIL",
              "transferMode": "PAYTM",
              "acknowledged": 0,
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_transfer_status_rejected_response": {
        "summary": "Get Transfer Status Rejected Response v1.2",
        "description": "Get Transfer Status Rejected Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 23457123",
          "data": {
            "transfer": {
              "transferId": "transfer_13",
              "beneId": "",
              "amount": "4.56",
              "status": "REJECTED",
              "addedOn": "2021-11-24 11:18:44",
              "processedOn": "2021-11-24 11:18:44",
              "reason": "BENEFICIARY_NOT_EXIST",
              "transferMode": "BANK",
              "acknowledged": 0,
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_transfer_status_reversed_response": {
        "summary": "Get Transfer Status Reversed Response v1.2",
        "description": "Get Transfer Status Reversed Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 403239",
          "data": {
            "transfer": {
              "transferId": "test_ransfer26",
              "bankAccount": "02014457596969",
              "ifsc": "CITI0000001",
              "beneId": "7503630267_1636542343",
              "amount": "3",
              "status": "REVERSED",
              "utr": "1637055017373632",
              "addedOn": "2021-11-16 15:00:17",
              "processedOn": "2021-11-16 15:01:17",
              "reason": "ANY_OTHER_REASON",
              "transferMode": "BANK",
              "acknowledged": 0,
              "phone": "7503630267",
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_transfer_status_received_response": {
        "summary": "Get Transfer Status Received Response v1.2",
        "description": "Get Transfer Status Received Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Details of transfer with referenceId 402310",
          "data": {
            "transfer": {
              "transferId": "transferBaas9899",
              "beneId": "",
              "amount": "1",
              "status": "RECEIVED",
              "addedOn": "2021-11-11 16:07:43",
              "processedOn": "0000-00-00 00:00:00",
              "transferMode": "BANK",
              "acknowledged": 0,
              "paymentInstrumentId": "CASHFREE_1"
            }
          }
        }
      },
      "get_batch_transfer_status_response_v12": {
        "summary": "Get Batch Transfer Status Response v1.2",
        "description": "Get Batch Transfer Status Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Data retrieved successfully",
          "data": {
            "rowCount": 2,
            "referenceId": 1582,
            "paymentInstrumentId": "CASHFREE_1",
            "transfers": [
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00121241112",
                "referenceId": 1523969542,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082925",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              },
              {
                "beneId": "9999999999_18875",
                "transferId": "PTM_00052312126",
                "referenceId": 1523969543,
                "bankAccount": "9999999999",
                "ifsc": "PYTM0000001",
                "amount": "12.00",
                "remarks": "",
                "status": "SUCCESS",
                "utr": "W1532082926",
                "addedOn": "2018-07-20",
                "processedOn": "2018-07-20"
              }
            ]
          }
        }
      },
      "batch_transfer_response_v12": {
        "summary": "Batch Transfer Response v1.2",
        "description": "Batch Transfer Response v1.2",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Batch Transfer requested successfully. Please check later for processing status.",
          "data": {
            "referenceId": 486
          }
        }
      },
      "create_cashgram_response": {
        "summary": "Create Cashgram Response",
        "description": "Create Cashgram Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Cashgram Created",
          "data": {
            "referenceId": 123456,
            "cashgramLink": "http://csgr.am/abcdefg"
          }
        }
      },
      "get_cashgram_response": {
        "summary": "Get Cashgram Status Response",
        "description": "Get Cashgram Status Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Cashgram details retrieved",
          "data": {
            "cashgramStatus": "ACTIVE",
            "referenceId": 123456,
            "cashgramId": "JOHaN10",
            "cashgramLink": "http://csgr.am/abcdefg"
          }
        }
      },
      "deactivate_cashgram_response": {
        "summary": "Deactivate Cashgram Response",
        "description": "Deactivate Cashgram Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "Cashgram with id - JOHaN10 successfully deactivated!"
        }
      },
      "get_incidents_response": {
        "summary": "Get Incidents Response",
        "description": "Get Incidents Response",
        "value": {
          "status": "SUCCESS",
          "subCode": "200",
          "message": "List of incidents retrieved",
          "data": {
            "incidents": [
              {
                "id": 214711,
                "type": "BENEFICIARY",
                "entity": "BANK",
                "mode": "IMPS",
                "createdAt": "2022-01-05 00:48:54",
                "resolvedAt": "2022-01-05 00:53:24",
                "isScheduled": false,
                "isResolved": true,
                "impact": "LOW",
                "entityName": "City union bank",
                "entityCode": "CIUB"
              },
              {
                "id": 214710,
                "type": "BENEFICIARY",
                "entity": "BANK",
                "mode": "IMPS",
                "createdAt": "2022-01-05 00:43:24",
                "resolvedAt": "2022-01-05 00:45:24",
                "isScheduled": false,
                "isResolved": true,
                "impact": "LOW",
                "entityName": "City union bank",
                "entityCode": "CIUB"
              }
            ]
          }
        }
      },
      "UnauthorizedErrorExample": {
        "summary": "Unauthorized Error",
        "description": "Invalid clientId and clientSecret",
        "value": {
          "status": "ERROR",
          "message": "Invalid clientId and clientSecret combination",
          "subCode": "401"
        }
      },
      "InvalidVPAExample": {
        "summary": "Invalid VPA",
        "description": "Invalid VPA provided",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Please provide a valid VPA"
        }
      },
      "InvalidTokenExample": {
        "summary": "Invalid Token",
        "description": "Invalid Token",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "Token is not valid"
        }
      },
      "IPNotWhitelistedExample": {
        "summary": "IP Not Whitelisted",
        "description": "IP Is Not Whitelisted",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "IP not whitelisted"
        }
      },
      "BeneIDExistsExample": {
        "summary": "Beneficiary Id already exists",
        "description": "Beneficiary with given Id already exists",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Beneficiary Id already exists"
        }
      },
      "BankAccountExistsExample": {
        "summary": "Bank Account is registered",
        "description": "Bank Account is already registered",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Entered bank Account is already registered"
        }
      },
      "TokenMissingExample": {
        "summary": "Token missing in the request",
        "description": "Token missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Token missing in the request"
        }
      },
      "BeneficiaryGroupInactiveExample": {
        "summary": "Beneficiary group is inactive",
        "description": "Beneficiary group is not an active group",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Beneficiary group is not an active group"
        }
      },
      "BankAccountVPABothPresentExample": {
        "summary": "Bank account and VPA both provided",
        "description": "Bank account and VPA both provided, only once is expected",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Bank account and VPA are both provided in the request. Please add either of them to add the beneficiary."
        }
      },
      "BeneficiarySelfExample": {
        "summary": "Cannot add self as beneficiary",
        "description": "Cannot add self account as a beneficiary",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Cannot add yourself as a beneficiary"
        }
      },
      "InvalidBeneficiaryID": {
        "summary": "Invalid Beneficiary ID",
        "description": "Invalid Beneficiary ID",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Beneficiary Id"
        }
      },
      "InvalidEmail": {
        "summary": "Invalid Email",
        "description": "Invalid Email",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid email"
        }
      },
      "InvalidName": {
        "summary": "Invalid Name",
        "description": "Invalid Name",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid name"
        }
      },
      "InvalidPhoneNumber": {
        "summary": "Invalid Phone Number",
        "description": "Invalid Phone Number",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Phone Number"
        }
      },
      "InvalidBankAccount": {
        "summary": "Invalid Bank Account",
        "description": "Invalid Bank Account",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Bank Account"
        }
      },
      "InvalidBankIFSC": {
        "summary": "Invalid Bank IFSC",
        "description": "Invalid Bank IFSC",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Bank IFSC code"
        }
      },
      "InvalidVirtualPayeeAddress": {
        "summary": "Invalid Virtual Payee Address",
        "description": "Invalid Virtual Payee Address",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Virtual Payee Address"
        }
      },
      "InvalidAddress": {
        "summary": "Invalid Address",
        "description": "Invalid Address",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Address"
        }
      },
      "InvalidCity": {
        "summary": "Invalid City",
        "description": "Invalid City",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid City Name"
        }
      },
      "InvalidState": {
        "summary": "Invalid State",
        "description": "Invalid State",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid State Name"
        }
      },
      "InvalidPincode": {
        "summary": "Invalid Pincode",
        "description": "Invalid Pincode",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid Pin code"
        }
      },
      "CashfreeVBABeneficiaryNotAllowed": {
        "summary": "Cashfree VBA VPA Beneficiary Not Allowed",
        "description": "Cashfree VBA/VPA Beneficiary Not Allowed",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Cashfree VBA/VPA cannot be added as a beneficiary"
        }
      },
      "InvalidCardNumber": {
        "summary": "Invalid Card Number",
        "description": "Invalid Card Number",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid MasterCard or Visa card number"
        }
      },
      "UnmaskedCardNumber": {
        "summary": "Unmasked Card Number",
        "description": "Unmasked Card Number",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a masked card number of a valid MasterCard or Visa card"
        }
      },
      "InvalidDetailsProvided": {
        "summary": "Invalid Details Provided",
        "description": "Invalid Details Provided",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid details provided"
        }
      },
      "AddingBeneficiaryFailed": {
        "summary": "Adding beneficiary Failed",
        "description": "Adding beneficiary Failed due to server error",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Adding beneficiary Failed"
        }
      },
      "APIsDisabledExample": {
        "summary": "APIs Disabled",
        "description": "Forbidden request. APIs are disabled",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "APIs not enabled. Please reach out to care@cashfree.com"
        }
      },
      "BeneficiaryNotFound": {
        "summary": "Beneficiary Not Found",
        "description": "Beneficiary does not exist",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Beneficiary does not exist"
        }
      },
      "BeneficiaryNotFoundWithBankDetails": {
        "summary": "Beneficiary Not Found with provided bank details",
        "description": "Beneficiary does not exist with the requested bank details",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Beneficiary not found with given bank account details"
        }
      },
      "InvalidBankAccountAndIFSC": {
        "summary": "Invalid Bank Account And IFSC",
        "description": "Invalid Bank Account And IFSC",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid bank account and ifsc"
        }
      },
      "BankAccountOrIFSCMissing": {
        "summary": "Bank Account or IFSC missing",
        "description": "Bank Account or/and IFSC missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide both bank account and ifsc"
        }
      },
      "ErrorFetchingBeneficiary": {
        "summary": "Error while fetching beneId",
        "description": "Error while fetching beneficiary with Id",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Error while fetching beneId"
        }
      },
      "BeneficiaryNotFoundWithID": {
        "summary": "Beneficiary does not exist with given Id",
        "description": "Beneficiary does not exist with the requested Id",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Beneficiary does not exist with given Id"
        }
      },
      "BeneIDMissing": {
        "summary": "BeneId missing in the request",
        "description": "Beneficiary Id not present in the request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "BeneId missing in the request"
        }
      },
      "UnknownErrorOccurred": {
        "summary": "Unknown error occurred",
        "description": "Unknown error occurred",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Unknown error occurred"
        }
      },
      "InvalidRequestURLOrMethod": {
        "summary": "Invalid Date Range",
        "description": "Invalid Date Range",
        "value": {
          "status": "ERROR",
          "subCode": "405",
          "message": "Invalid request URL or HTTP method"
        }
      },
      "InvalidDateRange": {
        "summary": "Invalid Date Range",
        "description": "Invalid Date Range",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Requested date range is invalid"
        }
      },
      "InvalidPageValue": {
        "summary": "Invalid Page Value",
        "description": "Invalid Page Value",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Page value should be minimum 1"
        }
      },
      "TooManyRequests": {
        "summary": "Too many requests",
        "description": "Too many requests",
        "value": {
          "status": "ERROR",
          "subCode": "429",
          "message": "Too many requests"
        }
      },
      "PaymentInstrumentIDNotFound": {
        "summary": "Payment Instrument ID Not Found",
        "description": "Payment Instrument ID Not Found",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Specified paymentInstrumentId not available"
        }
      },
      "PaymentInstrumentIDNotFound400": {
        "summary": "Payment Instrument ID Not Found",
        "description": "Payment Instrument ID Not Found",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Specified paymentInstrumentId not available"
        }
      },
      "RechargeAccountNotFound": {
        "summary": "Recharge Account not found",
        "description": "Recharge Account not found",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Recharge Account not found"
        }
      },
      "AccountNotConfigured": {
        "summary": "Account not configured",
        "description": "Account not configured, need to contact account manager",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Account not configured. Please reach out to account manager"
        }
      },
      "RechargeAccountOrInstrumentIDMissing": {
        "summary": "Recharge Account Or InstrumentID Missing",
        "description": "Recharge Account Or Instrument ID Missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Either one of rechargeAccount or (toPaymentInstrumentId and paymentInstrumentId) should be provided in the request"
        }
      },
      "MaxTransferAmountExceeded": {
        "summary": "Transfer amount is greater than the maximum amount",
        "description": "Transfer amount is greater than the maximum amount",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer amount is greater than the maximum amount of Rs.100000."
        }
      },
      "MinTransferAmountExceeded": {
        "summary": "Transfer amount is less than minimum amount",
        "description": "Transfer amount is less than minimum amount",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer amount is less than minimum amount of Rs. 1."
        }
      },
      "BeneficiaryTransferLimitExceeded": {
        "summary": "Transfer limit for beneficiary exceeded",
        "description": "Transfers limit for the beneficiary has exceeded.",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer limit for beneficiary exceeded."
        }
      },
      "BeneficiaryTransferLimitExceeded412": {
        "summary": "Transfer limit for beneficiary is exceeded",
        "description": "Transfers limit for the beneficiary is exceeded.",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Transfer limit for beneficiary exceeded."
        }
      },
      "FeatureUnavailable": {
        "summary": "Feature Unavailable for Account",
        "description": "Feature Is Not Available for Account",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "This feature is not available for your account."
        }
      },
      "TransferModeUnavailable": {
        "summary": "Transfer Mode Unavailable for Account",
        "description": "Transfer Mode Unavailable for Account",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "Transfer mode is not available for your account."
        }
      },
      "TransferToBeneficiaryNotAllowed": {
        "summary": "Transfer To Beneficiary Not Allowed",
        "description": "Transfer To Beneficiary Not Allowed",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "Transfer to this beneficiary not allowed."
        }
      },
      "TransferToBeneficiaryNotAllowed400": {
        "summary": "Transfer To Beneficiary Not Allowed",
        "description": "Transfer To Beneficiary Not Allowed",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer to this beneficiary not allowed."
        }
      },
      "TransferIdExists409": {
        "summary": "Transfer Id already exists",
        "description": "Transfer Id already exists",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Transfer Id already exists."
        }
      },
      "TransferAmountMissing": {
        "summary": "Transfer Amount Missing in Request",
        "description": "Transfer Amount Missing in Request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Amount missing in the request."
        }
      },
      "TransferIdMissing": {
        "summary": "TransferId missing in the request",
        "description": "TransferId missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "TransferId missing in the request."
        }
      },
      "NotEnoughBalance": {
        "summary": "Not enough available balance in the account",
        "description": "Not enough available balance in the account",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Not enough available balance in the account."
        }
      },
      "NotEnoughBalance400": {
        "summary": "Not enough available balance in the account",
        "description": "Not enough available balance in the account",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Not enough available balance in the account."
        }
      },
      "WaitAfterAddingBeneficiary": {
        "summary": "Wait After Adding Beneficiary",
        "description": "Wait After Adding Beneficiary",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Please wait 30 minutes after adding the beneficiary."
        }
      },
      "WaitAfterAddingBeneficiary400": {
        "summary": "Wait After Adding Beneficiary",
        "description": "Wait After Adding Beneficiary",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Please wait 30 minutes after adding the beneficiary."
        }
      },
      "AccountTransferLimitExceeded": {
        "summary": "Transfer Limit Exceeded for Account",
        "description": "Precondition Failed. Transfer Limit Exceeded for Account",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Transfer limit for your account exceeded."
        }
      },
      "AccountTransferLimitExceeded400": {
        "summary": "Transfer Limit Exceeded for Account",
        "description": "Bad Request. Transfer Limit Exceeded for Account",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer limit for your account exceeded."
        }
      },
      "InvalidTransferMode": {
        "summary": "Invalid transfer mode passed in the request",
        "description": "Invalid transfer mode passed in the request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Invalid transfer mode passed in the request."
        }
      },
      "TransferModeDisabled": {
        "summary": "Transfer mode not enabled for the account",
        "description": "Transfer mode not enabled for the account",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Transfer mode not enabled for the account."
        }
      },
      "TransferModeDisabled400": {
        "summary": "Transfer mode not enabled for the account",
        "description": "Transfer mode not enabled for the account",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer mode not enabled for the account."
        }
      },
      "InvalidTag": {
        "summary": "Invalid Tag passed in the request",
        "description": "Invalid Tag passed in the request",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Invalid Tag passed in the request."
        }
      },
      "InvalidAmount": {
        "summary": "Invalid amount passed",
        "description": "Invalid amount passed",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid amount passed."
        }
      },
      "InvalidTransferId": {
        "summary": "Invalid transferId passed in the request",
        "description": "Invalid transferId passed in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid transferId passed."
        }
      },
      "BeneficiaryVPANotFound": {
        "summary": "No Payee Virtual Address associated with the beneficiary",
        "description": "No Payee Virtual Address associated with the beneficiary",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "No Payee Virtual Address associated with the beneficiary."
        }
      },
      "InvalidRemarks": {
        "summary": "Invalid characters in Remarks",
        "description": "Invalid characters in Remarks",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Remarks can have only numbers, alphabets and whitespaces."
        }
      },
      "InvalidBeneficiaryDetails": {
        "summary": "Beneficiary details not valid",
        "description": "Beneficiary details not valid",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Beneficiary details not valid."
        }
      },
      "BeneficiaryBankDetailsNotFound": {
        "summary": "No Bank account or IFSC associated with the beneficiary",
        "description": "No Bank account or IFSC associated with the beneficiary",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "No Bank account or IFSC associated with the beneficiary."
        }
      },
      "InvalidIFSCForBankAccount": {
        "summary": "Invalid IFSC code provided for bank account",
        "description": "Invalid IFSC code provided for bank account",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid IFSC code provided for bank account."
        }
      },
      "InvalidBankAccountOrIFSC": {
        "summary": "Invalid bank account number or IFSC provided",
        "description": "Invalid bank account number or IFSC provided",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid bank account number or IFSC provided."
        }
      },
      "PaytmWalletTransferFailed": {
        "summary": "Transfer request to paytm wallet failed",
        "description": "Transfer request to paytm wallet failed",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Transfer request to paytm wallet failed."
        }
      },
      "PaytmWalletTransferFailed400": {
        "summary": "Transfer request to paytm wallet failed",
        "description": "Transfer request to paytm wallet failed",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer request to paytm wallet failed."
        }
      },
      "TransferAttemptFailedAtBank": {
        "summary": "Transfer attempt failed at the bank",
        "description": "Transfer attempt failed at the bank",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Transfer attempt failed at the bank."
        }
      },
      "TransferAttemptFailedAtBank400": {
        "summary": "Transfer attempt failed at the bank",
        "description": "Transfer attempt failed at the bank",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer attempt failed at the bank."
        }
      },
      "NoBankResponse": {
        "summary": "Transfer request triggered but no response from bank",
        "description": "Transfer request triggered but no response from bank",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Transfer request triggered.No response from bank."
        }
      },
      "TransferIdExists400": {
        "summary": "Transfer Id already exists",
        "description": "Transfer Id already exists",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Transfer Id already exists."
        }
      },
      "ReferenceIdNotFound": {
        "summary": "Reference Id not found",
        "description": "Reference not found",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "ReferenceId is invalid or does not exist"
        }
      },
      "TransferIdNotFound": {
        "summary": "Transfer Id Not found",
        "description": "Transfer Id Not found",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "TransferId is invalid or does not exist"
        }
      },
      "RefIdOrTransferIdRequired": {
        "summary": "One of Transfer Id or Reference Id required",
        "description": "One of Transfer Id or Reference Id required",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide referenceId or transferId to fetch details"
        }
      },
      "PermissionDenied": {
        "summary": "Permission Denied",
        "description": "Permission Denied",
        "value": {
          "status": "ERROR",
          "subCode": "403",
          "message": "Permission Denied"
        }
      },
      "PermissionDenied422": {
        "summary": "Permission Denied",
        "description": "Permission Denied",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Permission Denied"
        }
      },
      "InvalidBatchFormat": {
        "summary": "Invalid Batch Format",
        "description": "Invalid Batch Format",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Invalid Batch Format"
        }
      },
      "BatchTransferIdExists": {
        "summary": "Batch TransferId already exists",
        "description": "Batch with given TransferId already exists",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Batch TransferId abc-12356 already exists"
        }
      },
      "NoTransferEntry": {
        "summary": "No Transfer Entry found in the Batch",
        "description": "No Transfer Entry found in the Batch",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide at least one transfer entry"
        }
      },
      "BatchSizeExceeded": {
        "summary": "Maximum Entries exceeded in Batch",
        "description": "Batch Transfer has more entries than the maximum limit",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "The maximum number of entries allowed per file is 500, please try again."
        }
      },
      "TransferParametersMissing": {
        "summary": "Transfer Parameters missing in the request",
        "description": "Transfer Parameters missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Transfer Parameters missing in the request"
        }
      },
      "BatchTransferIdMissing": {
        "summary": "Batch transfer id is missing",
        "description": "Batch transfer id is missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Batch transfer id is missing"
        }
      },
      "BatchFormatMissing": {
        "summary": "Batch format is missing",
        "description": "Batch format is missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Batch format is missing"
        }
      },
      "InvalidBatchTransferId": {
        "summary": "Invalid Batch Transfer Id provided",
        "description": "Invalid Batch Transfer Id provided in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid Batch Transfer Id provided"
        }
      },
      "BatchTransferUnknownErrorOccurred": {
        "summary": "Invalid Batch Transfer Id provided",
        "description": "Invalid Batch Transfer Id provided",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Unknown error occurred at batchTransfer"
        }
      },
      "BatchTransferFailed": {
        "summary": "Batch Transfer request failed",
        "description": "Batch Transfer request failed due to server error",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Batch Transfer request failed"
        }
      },
      "BatchTransferError": {
        "summary": "Error in batch transfer",
        "description": "Server Error in batch transfer",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Error in batch transfer"
        }
      },
      "BulkTransferIdNotFound": {
        "summary": "Bulk Transfer Id does not exist",
        "description": "Bulk Transfers with requested Bulk Transfer Id does not exist",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Bulk Transfer Id does not exist"
        }
      },
      "BatchTransferIdNotFound": {
        "summary": "Batch Transfer Id does not exist",
        "description": "Batch Transfers with requested Id does not exist",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Batch Transfer Id does not exist"
        }
      },
      "ErrorFetchingData": {
        "summary": "Error while fetching data",
        "description": "Error while fetching data",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Error while fetching data"
        }
      },
      "ProvideValidToken": {
        "summary": "Invalid Token",
        "description": "Invalid Token",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide valid token details"
        }
      },
      "TransferIdRestrictions": {
        "summary": "Invalid transferId passed in the request",
        "description": "Invalid transferId passed in the request",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "transferId can contain only alphabets, numbers, hyphen and underscore"
        }
      },
      "BeneIDMissing400": {
        "summary": "BeneId missing in the request",
        "description": "Beneficiary Id missing in the request",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "BeneId missing in the request"
        }
      },
      "InvalidModeForBeneficiary": {
        "summary": "Mode Not valid for Beneficiary.",
        "description": "Mode Not valid for Beneficiary.",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Mode Not valid for Beneficiary"
        }
      },
      "InvalidPaymentInstrumentIDForMode": {
        "summary": "Payment Instrument ID Not Valid for Mode",
        "description": "Payment Instrument ID Not Valid for Mode",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Specified paymentInstrumentId not valid for this payment mode"
        }
      },
      "MultiplePaymentInstrumentsAvailableForMode": {
        "summary": "Multiple PaymentInstruments available for this payment mode",
        "description": "Multiple PaymentInstruments available for this payment mode",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Multiple PaymentInstruments available for this payment mode"
        }
      },
      "ProvideValidTransferId": {
        "summary": "Provide a valid transfer Id",
        "description": "Provide a valid transfer Id",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid transferId"
        }
      },
      "InternalErrorReinitiateTransfer": {
        "summary": "Internal error. Please re-initiate the transfer request",
        "description": "Internal error. Please re-initiate the transfer request",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Internal error. Please re-initiate the transfer request"
        }
      },
      "BeneficiaryDetailsMissing": {
        "summary": "Beneficiary details are missing in the request",
        "description": "Beneficiary details are missing in the request",
        "value": {
          "status": "FAILED",
          "subCode": "422",
          "message": "Beneficiary details are missing in the request"
        }
      },
      "ProvideValidAmount": {
        "summary": "amount should be at least 1.0",
        "description": "amount should be at least 1.0",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "amount should be at least 1.0"
        }
      },
      "InvalidNetworkType": {
        "summary": "Invalid Network Type",
        "description": "Invalid Network Type",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid networkType"
        }
      },
      "InvalidCardType": {
        "summary": "Invalid Card Type",
        "description": "Invalid Card Type",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "cardType is invalid"
        }
      },
      "ServiceChargeMoreThanDisbursalAmount": {
        "summary": "Total service charge is greater than disbursal amount",
        "description": "Total service charge is greater than disbursal amount",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Total service charge is greater than disbursal amount"
        }
      },
      "InsufficientBalanceInLenderFundsource": {
        "summary": "Insufficient balance in LENDER fundsource",
        "description": "Insufficient balance in LENDER fundsource",
        "value": {
          "status": "ERROR",
          "subCode": "400",
          "message": "Insufficient balance in LENDER fundsource"
        }
      },
      "ProvideValidBeneficiaryId": {
        "summary": "Provide a valid beneId",
        "description": "Provide a valid beneId",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid beneId"
        }
      },
      "ValidAmountRestrictions": {
        "summary": "Invalid Amount Passed.Only 2 decimal places are allowed.",
        "description": "Invalid Amount Passed.Only 2 decimal places are allowed.",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Invalid Amount Passed.Only 2 decimal places are allowed."
        }
      },
      "NotEnoughBalanceForCashgram": {
        "summary": "Available balance is less than requested cashgram amount",
        "description": "Available balance is less than requested cashgram amount",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Available balance is less than requested cashgram amount."
        }
      },
      "UnknownErrorTryAgain": {
        "summary": "Unknown error occurred. Please try again.",
        "description": "Unknown error occurred. Please try again.",
        "value": {
          "status": "ERROR",
          "subCode": "520",
          "message": "Unknown error occurred. Please try again."
        }
      },
      "CashgramNotFound": {
        "summary": "Cashgram with id does not exist",
        "description": "Cashgram with provided id does not exist",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Cashgram with id does not exist"
        }
      },
      "CashgramNotFoundWithThisID": {
        "summary": "Cashgram with given id does not exist",
        "description": "Cashgram with the requested id does not exist",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Cashgram with id JOHaN10 does not exist"
        }
      },
      "CashgramIDAlreadyExists": {
        "summary": "Cashgram with given id already exists",
        "description": "Cashgram with the requested id already exists",
        "value": {
          "status": "ERROR",
          "subCode": "409",
          "message": "Cashgram with id JOHaN10 already exists"
        }
      },
      "InvalidCashgramId": {
        "summary": "Invalid Cashgram Id",
        "description": "Invalid Cashgram Id",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Please provide a valid cashgram Id"
        }
      },
      "NoActiveCashgram": {
        "summary": "Active cashgrams id can only be deactivated",
        "description": "Active cashgrams id can only be deactivated",
        "value": {
          "status": "ERROR",
          "subCode": "404",
          "message": "Active cashgrams id can only be deactivated"
        }
      },
      "NoActiveCashgram412": {
        "summary": "Active cashgrams can only be deactivated",
        "description": "Active cashgrams can only be deactivated",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Active cashgrams can only be deactivated"
        }
      },
      "InvalidStatus": {
        "summary": "Invalid Status",
        "description": "Status is invalid",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Status is invalid"
        }
      },
      "EndTimeLessThanStartTime": {
        "summary": "End time is less than start time",
        "description": "End time cannot be less than start time",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "startTime should be less than or equal to EndTime"
        }
      },
      "InvalidTimeRange": {
        "summary": "Invalid Time Range",
        "description": "Maximum time difference can be upto 7 days and startTime should be within 90 days from now.",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "Maximum time difference can be upto 7 days and startTime should be within 90 days from now."
        }
      },
      "IncorrectFormatStartTime": {
        "summary": "Incorrect Format of start time",
        "description": "Start time format is incorrect",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "startTime should be of the format yyyy-MM-dd HH:mm:ss"
        }
      },
      "IncorrectFormatEndTime": {
        "summary": "Incorrect Format of end time",
        "description": "End time format is incorrect",
        "value": {
          "status": "ERROR",
          "subCode": "422",
          "message": "endTime should be of the format yyyy-MM-dd HH:mm:ss"
        }
      },
      "InvalidJSON": {
        "summary": "Post data is empty or an invalid JSON",
        "description": "Post data is empty or not a valid JSON",
        "value": {
          "status": "ERROR",
          "subCode": "412",
          "message": "Post data is empty or not a valid JSON"
        }
      }
    },
    "callbacks": {},
    "headers": {
      "x-request-id": {
        "schema": {
          "type": "string"
        },
        "example": "some-req-id",
        "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
      }
    }
  },
  "paths": {
    "/payout/v1/authorize": {
      "post": {
        "summary": "Generate Bearer Token",
        "description": "Use this API to generate the token from client id and secret",
        "tags": [
          "Authentication"
        ],
        "operationId": "generateBearerToken",
        "deprecated": false,
        "security": [
          {
            "XClientID": [],
            "XClientSecret": []
          },
          {
            "XClientID": [],
            "XClientSecret": [],
            "XCFSignatureHeader": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthorizeResponse",
                  "description": "Response for generating Bearer Token",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        },
                        "expiry": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "authorize_response": {
                    "summary": "Authorize Success Response",
                    "description": "Authorize Success Response",
                    "value": {
                      "status": "SUCCESS",
                      "message": "Token generated",
                      "subCode": "200",
                      "data": {
                        "token": "eyJ0eXA...fWStg",
                        "expiry": 1564130052
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "UnauthorizedErrorExample": {
                    "summary": "Unauthorized Error",
                    "description": "Invalid clientId and clientSecret",
                    "value": {
                      "status": "ERROR",
                      "message": "Invalid clientId and clientSecret combination",
                      "subCode": "401"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/verifyToken": {
      "post": {
        "summary": "Verify the bearer token generated",
        "description": "Use this API to verify the bearer token generated. If the token does not exist/invalid/expired, the response 'Token is not valid' is returned. Regenerate token in case of token expiry to make API calls (use /payout/v1/authorize for this).",
        "tags": [
          "Authentication"
        ],
        "operationId": "verifyToken",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "VerifyTokenResponse",
                  "description": "Response for verifying Bearer Token",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "SUCCESS",
                    "message": "Token is valid",
                    "subCode": "200"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidTokenExample": {
                    "summary": "Invalid Token",
                    "description": "Invalid Token",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "Token is not valid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/addBeneficiary": {
      "post": {
        "summary": "Add a beneficiary for making transfers to it.",
        "description": "Use this API to add a beneficiary to your Cashfree account by providing the bank account number, IFSC, and other required details. Before you request a transfer, ensure the account has been successfully added as a beneficiary.",
        "tags": [
          "Beneficiary"
        ],
        "operationId": "addBeneficiary",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to add a beneficiary.",
          "content": {
            "application/json": {
              "schema": {
                "title": "AddBeneficiaryRequest",
                "description": "Request Body for adding a new beneficiary",
                "type": "object",
                "properties": {
                  "beneId": {
                    "type": "string",
                    "description": "Unique Beneficiary ID to identify the beneficiary. Alphanumeric and underscore (_) allowed (50 character limit)"
                  },
                  "name": {
                    "type": "string",
                    "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed. Alphabets, numbers, white spaces ( ), and special characters are allowed."
                  },
                  "email": {
                    "type": "string",
                    "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Beneficiaries phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
                  },
                  "bankAccount": {
                    "type": "string",
                    "description": "Beneficiary bank account (9 - 18 alphanumeric character limit)"
                  },
                  "ifsc": {
                    "type": "string",
                    "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0"
                  },
                  "vpa": {
                    "type": "string",
                    "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
                  },
                  "address1": {
                    "type": "string",
                    "description": "Beneficiaries address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
                  },
                  "address2": {
                    "type": "string",
                    "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
                  },
                  "city": {
                    "type": "string",
                    "description": "Beneficiary city, only alphabets and white space (50 character limit)"
                  },
                  "state": {
                    "type": "string",
                    "description": "Beneficiary state, only alphabets and white space (50 character limit)"
                  },
                  "pincode": {
                    "type": "string",
                    "description": "Beneficiaries pincode, only numbers (6 character limit)"
                  }
                },
                "required": [
                  "beneId",
                  "name",
                  "email",
                  "phone",
                  "address1"
                ]
              },
              "examples": {
                "add_beneficiary_request": {
                  "summary": "Create Beneficiary Request",
                  "description": "Request Body for adding a new beneficiary",
                  "value": {
                    "beneId": "JOHN18011343",
                    "name": "john doe",
                    "email": "johndoe@cashfree.com",
                    "phone": "9876543210",
                    "bankAccount": "00111122233",
                    "ifsc": "HDFC0000001",
                    "vpa": "test@upi",
                    "address1": "ABC Road",
                    "address2": "XYZ Layout",
                    "city": "Bangalore",
                    "state": "Karnataka",
                    "pincode": "560001"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AddBeneficiaryResponse",
                  "description": "Response for creating new Beneficiary",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "add_beneficiary_response": {
                    "summary": "New Beneficiary created",
                    "description": "New Beneficiary created",
                    "value": {
                      "status": "SUCCESS",
                      "message": "Beneficiary added successfully",
                      "subCode": "200"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BeneIDExistsExample": {
                    "summary": "Beneficiary Id already exists",
                    "description": "Beneficiary with given Id already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "409",
                      "message": "Beneficiary Id already exists"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidJSON": {
                    "summary": "Post data is empty or an invalid JSON",
                    "description": "Post data is empty or not a valid JSON",
                    "value": {
                      "status": "ERROR",
                      "subCode": "412",
                      "message": "Post data is empty or not a valid JSON"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidBankIFSC": {
                    "summary": "Invalid Bank IFSC",
                    "description": "Invalid Bank IFSC",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid Bank IFSC code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getBeneficiary/{beneId}": {
      "get": {
        "summary": "Get Beneficiary details by id",
        "description": "Use this API to get the details of a particular beneficiary in your account.",
        "tags": [
          "Beneficiary"
        ],
        "operationId": "getBeneficiary",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "path",
            "name": "beneId",
            "example": "JOHN18011",
            "required": true,
            "description": "The bene_id passed in the request during the creation of the beneficiary",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetBeneficiaryResponse",
                  "description": "Response for getting Beneficiary by id",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "beneId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "groupName": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "address1": {
                          "type": "string"
                        },
                        "address2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "pincode": {
                          "type": "string"
                        },
                        "bankAccount": {
                          "type": "string"
                        },
                        "ifsc": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "vpa": {
                          "type": "string"
                        },
                        "addedOn": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_beneficiary_response": {
                    "summary": "Beneficiary details fetched successfully",
                    "description": "Beneficiary details fetched successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of beneficiary",
                      "data": {
                        "beneId": "JOHN18011",
                        "name": "John",
                        "groupName": "DEFAULT",
                        "email": "johndoe@cashfree.com",
                        "phone": "9876543210",
                        "address1": "ABCavenue",
                        "address2": "",
                        "city": "Bangalore",
                        "state": "Karnataka",
                        "pincode": "0",
                        "bankAccount": "00001111222233",
                        "ifsc": "HDFC0000001",
                        "status": "VERIFIED",
                        "vpa": "test@upi",
                        "addedOn": "2022-10-12 15:23:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BeneficiaryNotFound": {
                    "summary": "Beneficiary Not Found",
                    "description": "Beneficiary does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Beneficiary does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getBeneId": {
      "get": {
        "summary": "Get Beneficiary ID by bank account and ifsc",
        "description": "Use this API to get the beneficiary ID by providing the bank account number and ifsc.",
        "tags": [
          "Beneficiary"
        ],
        "operationId": "getBeneficiaryID",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "bankAccount",
            "required": true,
            "description": "Bank Account of beneficiary",
            "example": "00111122233",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ifsc",
            "required": true,
            "description": "IFSC code of beneficiary",
            "example": "HDFC0000001",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetBeneficiaryIDResponse",
                  "description": "Response for getting Beneficiary id by bank account and ifsc",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "beneId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_beneficiary_id_response": {
                    "summary": "Get Beneficiary Details by bank details",
                    "description": "Get Beneficiary Details by bank details",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "beneId retrieved successfully",
                      "data": {
                        "beneId": "JOHN18011"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BeneficiaryNotFoundWithBankDetails": {
                    "summary": "Beneficiary Not Found with provided bank details",
                    "description": "Beneficiary does not exist with the requested bank details",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Beneficiary not found with given bank account details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/removeBeneficiary": {
      "post": {
        "summary": "Remove Beneficiary",
        "description": "Use this API to remove an existing beneficiary from a list of added beneficiaries.",
        "tags": [
          "Beneficiary"
        ],
        "operationId": "removeBeneficiary",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to remove beneficiary",
          "content": {
            "application/json": {
              "schema": {
                "title": "RemoveBeneficiaryRequest",
                "description": "Request Body for removing a new beneficiary",
                "type": "object",
                "properties": {
                  "beneId": {
                    "type": "string",
                    "description": "Beneficiaries Id to delete, alphanumeric and underscore allowed (50 character limit)"
                  }
                },
                "required": [
                  "beneId"
                ]
              },
              "examples": {
                "remove_beneficiary_request": {
                  "summary": "Remove Beneficiary Request",
                  "description": "Remove Beneficiary Request",
                  "value": {
                    "beneId": "JOHN18011343"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RemoveBeneficiaryResponse",
                  "description": "Response for removing Beneficiary",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "remove_beneficiary_response": {
                    "summary": "Beneficiary Removed Successfully",
                    "description": "Beneficiary Removed Successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Beneficiary removed"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/beneHistory": {
      "get": {
        "summary": "Get Beneficiary History",
        "description": "Use this API to fetch the transaction history for a particular beneficiary and for a desired period of time.",
        "tags": [
          "Beneficiary"
        ],
        "operationId": "beneHistory",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "beneId",
            "required": true,
            "description": "The beneficiary id that you have created. Alphanumeric characters accepted.",
            "example": "VENKY_UPI",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "Start date for the desired period. Format - yyyy-mm-dd",
            "example": "2021-05-27",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "End date for the desired period. Format - yyyy-mm-dd. If start date is provided, end date is a mandatory. End date has to be a day less than current date.",
            "example": "2021-05-31",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Number of transactions to be displayed on the page. Maximum = 25. Default value set is 25.",
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Will show the latest transfers on the first page. Minimum = 1. Default value set is 1.",
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BeneficiaryHistoryResponse",
                  "description": "Response for fetching Beneficiary history",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transfers": {
                          "type": "array",
                          "items": {
                            "title": "BeneficiaryTransfer",
                            "description": "Beneficiary Transfer Object",
                            "type": "object",
                            "properties": {
                              "transferDate": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "string"
                              },
                              "mode": {
                                "type": "string"
                              },
                              "beneId": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "example": {
                              "transferDate": "2020-06-16",
                              "amount": "1",
                              "mode": "IMPS",
                              "beneId": "John Doe",
                              "status": "SUCCESS"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "beneficiary_history_response": {
                    "summary": "Beneficiary Transfer History fetched successfully",
                    "description": "Beneficiary Transfer History fetched successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Data retrieved successfully",
                      "data": {
                        "transfers": [
                          {
                            "transferDate": "2020-06-16",
                            "amount": "1",
                            "mode": "IMPS",
                            "beneId": "John Doe",
                            "status": "SUCCESS"
                          },
                          {
                            "transferDate": "2020-05-28",
                            "amount": "1",
                            "mode": "NEFT",
                            "beneId": "John Doe",
                            "status": "SUCCESS"
                          },
                          {
                            "transferDate": "2020-05-15",
                            "amount": "1.1",
                            "mode": "IMPS",
                            "beneId": "John Doe",
                            "status": "SUCCESS"
                          },
                          {
                            "transferDate": "2020-05-15",
                            "amount": "1.1",
                            "mode": "IMPS",
                            "beneId": "John Doe",
                            "status": "SUCCESS"
                          },
                          {
                            "transferDate": "2020-05-15",
                            "amount": "1",
                            "mode": "IMPS",
                            "beneId": "John Doe",
                            "status": "SUCCESS"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidBeneficiaryID": {
                    "summary": "Invalid Beneficiary ID",
                    "description": "Invalid Beneficiary ID",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid Beneficiary Id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getBalance": {
      "get": {
        "summary": "Get Balance",
        "description": "Use this API to get the ledger balance and available balance of your account. Available balance is ledger balance minus the sum of all pending transfers (transfers triggered and processing or pending now).",
        "tags": [
          "Account"
        ],
        "operationId": "getBalance",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BalanceResponse",
                  "description": "Balance Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "number",
                          "format": "double"
                        },
                        "availableBalance": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_balance_response": {
                    "summary": "Account Balance fetched successfully",
                    "description": "Account Balance fetched successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Ledger balance for the account",
                      "data": {
                        "balance": "214735.50",
                        "availableBalance": "173980.50"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/getBalance": {
      "get": {
        "summary": "Get Balance V1.2",
        "description": "Use this API to get the ledger balance and available balance of your account. Available balance is ledger balance minus the sum of all pending transfers (transfers triggered and processing or pending now).",
        "tags": [
          "Account"
        ],
        "operationId": "getBalance_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "paymentInstrumentId",
            "description": "Payment Instrument ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BalanceResponse",
                  "description": "Balance Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "number",
                          "format": "double"
                        },
                        "availableBalance": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_balance_response": {
                    "summary": "Account Balance fetched successfully",
                    "description": "Account Balance fetched successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Ledger balance for the account",
                      "data": {
                        "balance": "214735.50",
                        "availableBalance": "173980.50"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "PaymentInstrumentIDNotFound": {
                    "summary": "Payment Instrument ID Not Found",
                    "description": "Payment Instrument ID Not Found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Specified paymentInstrumentId not available"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/selfWithdrawal": {
      "post": {
        "summary": "Self Withdrawal",
        "description": "Use this API to request a self withdrawal at Cashfree. Self withdrawal is allowed a maximum of 3 times a day. The API response will either result in an ERROR or SUCCESS response. The status of the withdrawal request is available on the dashboard.",
        "tags": [
          "Account"
        ],
        "operationId": "selfWithdrawal",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to do self withdrawal.",
          "content": {
            "application/json": {
              "schema": {
                "title": "SelfWithdrawalRequest",
                "description": "Self Withdrawal Request",
                "type": "object",
                "properties": {
                  "withdrawalId": {
                    "type": "string",
                    "description": "Unique identifier for the withdrawal, alphanumeric allowed (50 character limit)"
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be withdrawn, decimal (>= 1.00)"
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Remarks, if any. Alphanumeric and white space (70 character limit)"
                  }
                },
                "required": [
                  "withdrawalId",
                  "amount"
                ]
              },
              "examples": {
                "self_withdrawal_request": {
                  "summary": "Self Withdrawal Request",
                  "description": "Request Body for doing self-withdrawal",
                  "value": {
                    "withdrawalId": "1",
                    "amount": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SelfWithdrawalResponse",
                  "description": "Self Withdrawal Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "self_withdrawal_response": {
                    "summary": "Self Withdrawal initiated successfully",
                    "description": "Self Withdrawal initiated successfully",
                    "value": {
                      "status": "SUCCESS",
                      "message": "Withdrawal is in process. Withdrawal Id : W55",
                      "statusCode": "200"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/internalTransfer": {
      "post": {
        "summary": "Internal Transfer",
        "description": "Use this API to request an internal transfer at Cashfree. The internal transfer API is useful for multiple Payouts accounts. The API response will either result in an ERROR or SUCCESS response.",
        "tags": [
          "Account"
        ],
        "operationId": "internalTransfer",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to do internal transfer.",
          "content": {
            "application/json": {
              "schema": {
                "title": "InternalTransferRequest",
                "description": "Internal Transfer Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be transferred. Number (>=1)"
                  },
                  "rechargeAccount": {
                    "type": "string",
                    "description": "Cashfree internal recharge account number. Alphanumeric allowed"
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit). If the value is not passed, the id will be autogenerated."
                  }
                },
                "required": [
                  "amount",
                  "rechargeAccount"
                ]
              },
              "examples": {
                "internal_transfer_request": {
                  "summary": "Internal Transfer Request",
                  "description": "Request Body for doing internal transfer",
                  "value": {
                    "amount": 10.5,
                    "rechargeAccount": "492372992"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "InternalTransferResponse",
                  "description": "Internal Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transferId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "internal_transfer_response": {
                    "summary": "Internal Transfer Success Response",
                    "description": "Internal Transfer Success Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "RefId-a0302c78d13142b89d85af472961901528/006291823001146-Internal Fund Transfer",
                      "data": {
                        "transferId": "a0302c78d13142b89d85af472961901528"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "RechargeAccountNotFound": {
                    "summary": "Recharge Account not found",
                    "description": "Recharge Account not found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Recharge Account not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "AccountNotConfigured": {
                    "summary": "Account not configured",
                    "description": "Account not configured, need to contact account manager",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Account not configured. Please reach out to account manager"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/internalTransfer": {
      "post": {
        "summary": "Internal Transfer V1.2",
        "description": "Use this API to request an internal transfer. It is useful for accounts with multiple fund sources. You need to provide either the rechargeAccount or paymentInstrumentId and toPaymentInstrumentId along with the amount.",
        "tags": [
          "Account"
        ],
        "operationId": "internalTransfer_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to do internal transfer.",
          "content": {
            "application/json": {
              "schema": {
                "title": "InternalTransferRequestV12",
                "description": "Internal Transfer Request v1.2",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be transferred. Number (>=1)"
                  },
                  "rechargeAccount": {
                    "type": "string",
                    "description": "It is the Cashfree Payments' internal recharge account number. Alphanumeric characters are allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "It is the unique ID to identify the transfer. Alphanumeric, hyphen (-), and underscore (_) characters are allowed. Maximum character limit is 40. The ID is auto-generated if the parameter is left blank."
                  },
                  "paymentInstrumentId": {
                    "type": "string",
                    "description": "It is the unique ID to identify the fund source from which you want to transfer the money. Alphanumeric characters are allowed."
                  },
                  "toPaymentInstrumentId": {
                    "type": "string",
                    "description": "It is the unique ID to identify the fund source where you want to deposit the money. Alphanumeric characters are allowed."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Any remarks if required."
                  }
                },
                "required": [
                  "amount"
                ]
              },
              "examples": {
                "internal_transfer_request_v12": {
                  "summary": "Internal Transfer Request v1.2",
                  "description": "Request Body for doing internal transfer v1.2",
                  "value": {
                    "toPaymentInstrumentId": "COLENDING_WALLET_336561_8888981",
                    "paymentInstrumentId": "COLENDING_WALLET_336561_8888982",
                    "amount": 10.5,
                    "remarks": "some remarks",
                    "transferId": "testingw123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "InternalTransferResponse",
                  "description": "Internal Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transferId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "internal_transfer_response_v12": {
                    "summary": "Internal Transfer Success Response v1.2",
                    "description": "Internal Transfer Success Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "RefId-testingw123/some remarks-Internal Fund Transfer",
                      "data": {
                        "transferId": "123"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "RechargeAccountOrInstrumentIDMissing": {
                    "summary": "Recharge Account Or InstrumentID Missing",
                    "description": "Recharge Account Or Instrument ID Missing in the request",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Either one of rechargeAccount or (toPaymentInstrumentId and paymentInstrumentId) should be provided in the request"
                    }
                  },
                  "PaymentInstrumentIDNotFound": {
                    "summary": "Payment Instrument ID Not Found",
                    "description": "Payment Instrument ID Not Found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Specified paymentInstrumentId not available"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/requestTransfer": {
      "post": {
        "summary": "Standard Transfer Sync",
        "description": "Use this API to initiate an amount transfer request at Cashfree by providing beneficiary id, amount, and transfer id. This is a sync transfer request.",
        "tags": [
          "Transfers"
        ],
        "operationId": "requestTransfer",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to transfer money to a beneficiary",
          "content": {
            "application/json": {
              "schema": {
                "title": "TransferRequest",
                "description": "Transfer Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "amount to be transferred. Decimals allowed (>= 1.00)"
                  },
                  "beneId": {
                    "type": "string",
                    "description": "Beneficiary Id. Alphanumeric characters allowed.",
                    "maxLength": 50
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit).",
                    "maxLength": 40
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer.",
                    "maxLength": 20
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit).",
                    "maxLength": 70
                  },
                  "transferType": {
                    "type": "string",
                    "description": "Transfer Type",
                    "maxLength": 7
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP Address of the caller"
                  },
                  "product": {
                    "type": "string",
                    "description": "Cashfree Product Name"
                  },
                  "rda": {
                    "type": "object",
                    "description": "Rupee Drawing Arrangement",
                    "properties": {
                      "quoteId": {
                        "type": "string",
                        "description": "Quote ID"
                      },
                      "requestCurrency": {
                        "type": "string",
                        "description": "Request Currency"
                      },
                      "sendingCurrency": {
                        "type": "string",
                        "description": "Sending Currency"
                      },
                      "receivingCurrency": {
                        "type": "string",
                        "description": "Receiving Currency"
                      },
                      "type": {
                        "type": "string",
                        "description": "RDA Type",
                        "enum": [
                          "inttransfer",
                          "p2p",
                          "p2b",
                          "b2p",
                          "b2b"
                        ]
                      },
                      "senderMobNo": {
                        "type": "string",
                        "description": "Sender Mobile Number"
                      },
                      "senderKyc": {
                        "type": "object",
                        "description": "Sender KYC Details",
                        "properties": {
                          "nationality": {
                            "type": "string",
                            "description": "Sender's Nationality"
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "description": "Sender's Date of Birth"
                          },
                          "document": {
                            "type": "object",
                            "description": "Sender's Document",
                            "properties": {
                              "idType": {
                                "type": "string",
                                "description": "Document Type"
                              },
                              "idNumber": {
                                "type": "string",
                                "description": "Document Number"
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "Document expiration date"
                              }
                            },
                            "required": [
                              "idType",
                              "idNumber",
                              "expiryDate"
                            ]
                          },
                          "postalAddress": {
                            "type": "object",
                            "description": "Sender's Postal Address",
                            "properties": {
                              "addressLine1": {
                                "type": "string",
                                "description": "Address Line 1"
                              },
                              "city": {
                                "type": "string",
                                "description": "City"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country"
                              }
                            },
                            "required": [
                              "addressLine1",
                              "city",
                              "country"
                            ]
                          },
                          "subjectName": {
                            "type": "object",
                            "description": "Sender's Name",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "First Name"
                              },
                              "lastName": {
                                "type": "string",
                                "description": "Last Name"
                              },
                              "fullName": {
                                "type": "string",
                                "description": "Full Name"
                              }
                            },
                            "required": [
                              "firstName",
                              "lastName",
                              "fullName"
                            ]
                          },
                          "primaryContactCountryCode": {
                            "type": "string",
                            "description": "Primary Contact's Country Code"
                          },
                          "primaryContactNo": {
                            "type": "string",
                            "description": "Primary Contact Number"
                          },
                          "primaryContactNoType": {
                            "type": "string",
                            "description": "Primary Contact Type"
                          }
                        },
                        "required": [
                          "nationality",
                          "dateOfBirth",
                          "document",
                          "postalAddress",
                          "subjectName"
                        ]
                      },
                      "receivingCountry": {
                        "type": "string",
                        "description": "Receiving Country"
                      },
                      "remittancePurpose": {
                        "type": "string",
                        "description": "Remittance Purpose"
                      },
                      "sourceOfFunds": {
                        "type": "string",
                        "description": "Source Of Funds"
                      },
                      "relationshipSender": {
                        "type": "string",
                        "description": "Relationship with Sender"
                      },
                      "originCountry": {
                        "type": "string",
                        "description": "Country of origin"
                      },
                      "senderBusinessKyc": {
                        "type": "object",
                        "description": "Business KYC details",
                        "properties": {
                          "pinCode": {
                            "type": "string",
                            "description": "Pincode"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address"
                          },
                          "primaryContactCountryCode": {
                            "type": "string",
                            "description": "Primary Contact's Country Code"
                          },
                          "primaryContactNo": {
                            "type": "string",
                            "description": "Primary Contact Number"
                          },
                          "email": {
                            "type": "string",
                            "description": "Business Email ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Business Name"
                          },
                          "addressCountryCode": {
                            "type": "string",
                            "description": "Business Address Country Code"
                          },
                          "countryCode": {
                            "type": "string",
                            "description": "Country Code"
                          },
                          "regType": {
                            "type": "string",
                            "description": "Registration Type"
                          },
                          "regIssuedBy": {
                            "type": "string",
                            "description": "Registration Issued By"
                          },
                          "regIssuedAt": {
                            "type": "string",
                            "description": "Registration Issued At"
                          },
                          "regNumber": {
                            "type": "string",
                            "description": "Registration Number"
                          },
                          "regIssueDate": {
                            "type": "string",
                            "description": "Registration Issued Date"
                          },
                          "idValidThru": {
                            "type": "string",
                            "description": "Registration ID Validation Date"
                          }
                        },
                        "required": [
                          "address",
                          "primaryContactCountryCode",
                          "primaryContactNo",
                          "email",
                          "name",
                          "countryCode",
                          "regType",
                          "regNumber",
                          "regIssueDate",
                          "idValidThru"
                        ]
                      }
                    },
                    "required": [
                      "senderMobNo",
                      "remittancePurpose",
                      "sourceOfFunds",
                      "originCountry"
                    ]
                  }
                },
                "required": [
                  "beneId",
                  "amount",
                  "transferId"
                ]
              },
              "examples": {
                "transfer_request": {
                  "summary": "Transfer Request",
                  "description": "Request Body for making a transfer",
                  "value": {
                    "beneId": "JOHN18011",
                    "amount": "1.00",
                    "transferId": "JUNOB2018"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  },
                  "BeneficiaryNotFound": {
                    "summary": "Beneficiary Not Found",
                    "description": "Beneficiary does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Beneficiary does not exist"
                    }
                  },
                  "InvalidRemarks": {
                    "summary": "Invalid characters in Remarks",
                    "description": "Invalid characters in Remarks",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Remarks can have only numbers, alphabets and whitespaces."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/requestAsyncTransfer": {
      "post": {
        "summary": "Standard Transfer Async",
        "description": "Use this API to initiate an amount transfer request at Cashfree by providing beneficiary id, amount, and transfer id. This is an async transfer request.",
        "tags": [
          "Transfers"
        ],
        "operationId": "requestAsyncTransfer",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to transfer money to a beneficiary asynchronously",
          "content": {
            "application/json": {
              "schema": {
                "title": "TransferRequest",
                "description": "Transfer Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "amount to be transferred. Decimals allowed (>= 1.00)"
                  },
                  "beneId": {
                    "type": "string",
                    "description": "Beneficiary Id. Alphanumeric characters allowed.",
                    "maxLength": 50
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit).",
                    "maxLength": 40
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer.",
                    "maxLength": 20
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit).",
                    "maxLength": 70
                  },
                  "transferType": {
                    "type": "string",
                    "description": "Transfer Type",
                    "maxLength": 7
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP Address of the caller"
                  },
                  "product": {
                    "type": "string",
                    "description": "Cashfree Product Name"
                  },
                  "rda": {
                    "type": "object",
                    "description": "Rupee Drawing Arrangement",
                    "properties": {
                      "quoteId": {
                        "type": "string",
                        "description": "Quote ID"
                      },
                      "requestCurrency": {
                        "type": "string",
                        "description": "Request Currency"
                      },
                      "sendingCurrency": {
                        "type": "string",
                        "description": "Sending Currency"
                      },
                      "receivingCurrency": {
                        "type": "string",
                        "description": "Receiving Currency"
                      },
                      "type": {
                        "type": "string",
                        "description": "RDA Type",
                        "enum": [
                          "inttransfer",
                          "p2p",
                          "p2b",
                          "b2p",
                          "b2b"
                        ]
                      },
                      "senderMobNo": {
                        "type": "string",
                        "description": "Sender Mobile Number"
                      },
                      "senderKyc": {
                        "type": "object",
                        "description": "Sender KYC Details",
                        "properties": {
                          "nationality": {
                            "type": "string",
                            "description": "Sender's Nationality"
                          },
                          "dateOfBirth": {
                            "type": "string",
                            "description": "Sender's Date of Birth"
                          },
                          "document": {
                            "type": "object",
                            "description": "Sender's Document",
                            "properties": {
                              "idType": {
                                "type": "string",
                                "description": "Document Type"
                              },
                              "idNumber": {
                                "type": "string",
                                "description": "Document Number"
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "Document expiration date"
                              }
                            },
                            "required": [
                              "idType",
                              "idNumber",
                              "expiryDate"
                            ]
                          },
                          "postalAddress": {
                            "type": "object",
                            "description": "Sender's Postal Address",
                            "properties": {
                              "addressLine1": {
                                "type": "string",
                                "description": "Address Line 1"
                              },
                              "city": {
                                "type": "string",
                                "description": "City"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country"
                              }
                            },
                            "required": [
                              "addressLine1",
                              "city",
                              "country"
                            ]
                          },
                          "subjectName": {
                            "type": "object",
                            "description": "Sender's Name",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "First Name"
                              },
                              "lastName": {
                                "type": "string",
                                "description": "Last Name"
                              },
                              "fullName": {
                                "type": "string",
                                "description": "Full Name"
                              }
                            },
                            "required": [
                              "firstName",
                              "lastName",
                              "fullName"
                            ]
                          },
                          "primaryContactCountryCode": {
                            "type": "string",
                            "description": "Primary Contact's Country Code"
                          },
                          "primaryContactNo": {
                            "type": "string",
                            "description": "Primary Contact Number"
                          },
                          "primaryContactNoType": {
                            "type": "string",
                            "description": "Primary Contact Type"
                          }
                        },
                        "required": [
                          "nationality",
                          "dateOfBirth",
                          "document",
                          "postalAddress",
                          "subjectName"
                        ]
                      },
                      "receivingCountry": {
                        "type": "string",
                        "description": "Receiving Country"
                      },
                      "remittancePurpose": {
                        "type": "string",
                        "description": "Remittance Purpose"
                      },
                      "sourceOfFunds": {
                        "type": "string",
                        "description": "Source Of Funds"
                      },
                      "relationshipSender": {
                        "type": "string",
                        "description": "Relationship with Sender"
                      },
                      "originCountry": {
                        "type": "string",
                        "description": "Country of origin"
                      },
                      "senderBusinessKyc": {
                        "type": "object",
                        "description": "Business KYC details",
                        "properties": {
                          "pinCode": {
                            "type": "string",
                            "description": "Pincode"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address"
                          },
                          "primaryContactCountryCode": {
                            "type": "string",
                            "description": "Primary Contact's Country Code"
                          },
                          "primaryContactNo": {
                            "type": "string",
                            "description": "Primary Contact Number"
                          },
                          "email": {
                            "type": "string",
                            "description": "Business Email ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Business Name"
                          },
                          "addressCountryCode": {
                            "type": "string",
                            "description": "Business Address Country Code"
                          },
                          "countryCode": {
                            "type": "string",
                            "description": "Country Code"
                          },
                          "regType": {
                            "type": "string",
                            "description": "Registration Type"
                          },
                          "regIssuedBy": {
                            "type": "string",
                            "description": "Registration Issued By"
                          },
                          "regIssuedAt": {
                            "type": "string",
                            "description": "Registration Issued At"
                          },
                          "regNumber": {
                            "type": "string",
                            "description": "Registration Number"
                          },
                          "regIssueDate": {
                            "type": "string",
                            "description": "Registration Issued Date"
                          },
                          "idValidThru": {
                            "type": "string",
                            "description": "Registration ID Validation Date"
                          }
                        },
                        "required": [
                          "address",
                          "primaryContactCountryCode",
                          "primaryContactNo",
                          "email",
                          "name",
                          "countryCode",
                          "regType",
                          "regNumber",
                          "regIssueDate",
                          "idValidThru"
                        ]
                      }
                    },
                    "required": [
                      "senderMobNo",
                      "remittancePurpose",
                      "sourceOfFunds",
                      "originCountry"
                    ]
                  }
                },
                "required": [
                  "beneId",
                  "amount",
                  "transferId"
                ]
              },
              "examples": {
                "transfer_request": {
                  "summary": "Transfer Request",
                  "description": "Request Body for making a transfer",
                  "value": {
                    "beneId": "JOHN18011",
                    "amount": "1.00",
                    "transferId": "JUNOB2018"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferAsyncResponse",
                  "description": "Transfer Async Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "async_transfer_initiated_response": {
                    "summary": "Transfer Initiated successfully",
                    "description": "Transfer Initiated successfully",
                    "value": {
                      "status": "ACCEPTED",
                      "subCode": "201",
                      "message": "Transfer Initiated",
                      "data": {
                        "referenceId": "107260"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidRemarks": {
                    "summary": "Invalid characters in Remarks",
                    "description": "Invalid characters in Remarks",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Remarks can have only numbers, alphabets and whitespaces."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/directTransfer": {
      "post": {
        "summary": "Direct Transfer",
        "description": "Use this API to initiate amount transfers directly to the beneficiary account via a bank transfer or UPI. You can add the beneficiary details in the same API request.",
        "tags": [
          "Transfers"
        ],
        "operationId": "directTransfer",
        "deprecated": false,
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "description": "Request body to transfer money to a beneficiary using bank account details",
          "content": {
            "application/json": {
              "schema": {
                "title": "DirectTransferRequest",
                "description": "Direct Transfer Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be transferred. Amount should be greater that INR 1.00. Decimals are allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique ID to identify this transfer. Alphanumeric characters and underscores are allowed (40 character limit)."
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional Remarks, if required."
                  },
                  "beneDetails": {
                    "type": "object",
                    "description": "Object with the beneficiary details to whom amount is to be transferred",
                    "properties": {
                      "beneId": {
                        "type": "string",
                        "description": "Beneficiary Id. Alphanumeric characters allowed."
                      },
                      "name": {
                        "type": "string",
                        "description": "Beneficiary name, only alphabets and white space (100 character limit)"
                      },
                      "email": {
                        "type": "string",
                        "description": "Beneficiary email address, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Beneficiary phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
                      },
                      "bankAccount": {
                        "type": "string",
                        "description": "Beneficiary bank account (9 - 18 alphanumeric character limit) (Required in case of banktransfer, imps, neft mode)"
                      },
                      "ifsc": {
                        "type": "string",
                        "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0 (Required in case of banktransfer, imps, neft mode)"
                      },
                      "vpa": {
                        "type": "string",
                        "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@) (Required in case of UPI)"
                      },
                      "address1": {
                        "type": "string",
                        "description": "Beneficiary address. Alphanumeric characters and space allowed (150 character limit)."
                      },
                      "address2": {
                        "type": "string",
                        "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
                      },
                      "city": {
                        "type": "string",
                        "description": "Beneficiary city, only alphabets and white space (50 character limit)"
                      },
                      "state": {
                        "type": "string",
                        "description": "Beneficiary state, only alphabets and white space (50 character limit)"
                      },
                      "pincode": {
                        "type": "string",
                        "description": "Beneficiaries pincode, only numbers (6 character limit)"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "phone"
                    ]
                  }
                },
                "required": [
                  "amount",
                  "transferId",
                  "transferMode",
                  "beneDetails"
                ]
              },
              "examples": {
                "direct_transfer_request": {
                  "summary": "Direct Transfer Request",
                  "description": "Request Body for making a transfer with beneficiary bank account details",
                  "value": {
                    "amount": 30,
                    "transferId": "JUNOB2018142",
                    "transferMode": "banktransfer",
                    "remarks": "test",
                    "beneDetails": {
                      "bankAccount": "026291800001191",
                      "ifsc": "YESB0000262",
                      "name": "Ranjiths",
                      "email": "ranjiths@cashfree.com",
                      "phone": "9999999999",
                      "address1": "any_dummy_value"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  },
                  "transfer_pending_at_bank_response": {
                    "summary": "Transfer request pending at the bank",
                    "description": "Transfer request pending at the bank",
                    "value": {
                      "status": "PENDING",
                      "subCode": "201",
                      "message": "Transfer request pending at the bank",
                      "data": {
                        "referenceId": "10023",
                        "utr": "",
                        "acknowledged": 0
                      }
                    }
                  },
                  "TransferIdExists": {
                    "summary": "Transfer Id already exists",
                    "description": "Transfer Id already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Transfer Id already exists."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getTransferStatus": {
      "get": {
        "summary": "Get Transfer Status",
        "description": "Use these details to get details of a particular transfer. You can pass referenceId or transferId to fetch the details.",
        "tags": [
          "Transfers"
        ],
        "operationId": "getTransferStatus",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "referenceId",
            "description": "Reference ID of the transaction. (Either referenceId or transferId is mandatory)",
            "example": "10023",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "transferId",
            "description": "Transfer ID of the transaction.",
            "example": "Sample_test",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetTransferStatusResponse",
                  "description": "Transfer Status Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transfer": {
                          "type": "object",
                          "properties": {
                            "transferId": {
                              "type": "string"
                            },
                            "referenceId": {
                              "type": "string"
                            },
                            "bankAccount": {
                              "type": "string"
                            },
                            "ifsc": {
                              "type": "string"
                            },
                            "beneId": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number",
                              "format": "double"
                            },
                            "status": {
                              "type": "string"
                            },
                            "utr": {
                              "type": "string"
                            },
                            "addedOn": {
                              "type": "string"
                            },
                            "processedOn": {
                              "type": "string"
                            },
                            "reason": {
                              "type": "string"
                            },
                            "transferMode": {
                              "type": "string"
                            },
                            "acknowledged": {
                              "type": "integer"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "vpa": {
                              "type": "string"
                            },
                            "paymentInstrumentId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_status_success_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 200223467",
                      "data": {
                        "transfer": {
                          "transferId": "sample01139",
                          "bankAccount": "000810139000385",
                          "ifsc": "YESB0MAN001",
                          "beneId": "test_bene",
                          "amount": "1.2",
                          "status": "SUCCESS",
                          "utr": "N351200478962883",
                          "addedOn": "2020-12-16 09:17:41",
                          "processedOn": "2020-12-16 09:17:42",
                          "transferMode": "BANK",
                          "acknowledged": 1
                        }
                      }
                    }
                  },
                  "transfer_status_failed_response": {
                    "summary": "Transfer Failed",
                    "description": "Transfer Failed",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 195460327",
                      "data": {
                        "transfer": {
                          "transferId": "1025fca380442d98",
                          "bankAccount": "20274048860",
                          "ifsc": "SBIN0002207",
                          "beneId": "TEST1234",
                          "amount": "1.1",
                          "status": "FAILED",
                          "addedOn": "2020-12-04 18:52:12",
                          "processedOn": "2020-12-04 19:07:13",
                          "reason": "BENEFICIARY_BANK_OFFLINE",
                          "transferMode": "BANK",
                          "acknowledged": 0
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "ReferenceIdNotFound": {
                    "summary": "Reference Id not found",
                    "description": "Reference not found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "ReferenceId is invalid or does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/requestBatchTransfer": {
      "post": {
        "summary": "Batch Transfer",
        "description": "Use this API to create multiple transfers to multiple beneficiaries. This API accepts an array of transfer objects under the batch field.",
        "operationId": "requestBatchTransfer",
        "deprecated": false,
        "tags": [
          "Transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to create a batch transfer",
          "content": {
            "application/json": {
              "schema": {
                "title": "BatchTransferRequest",
                "description": "Batch Transfer Request",
                "type": "object",
                "properties": {
                  "batchTransferId": {
                    "type": "string",
                    "description": "Unique Id of the Batch Transfer, alphanumeric and underscore allowed (60 character limit)"
                  },
                  "batchFormat": {
                    "type": "string",
                    "description": "Format of the batch transfers, valid values are, BENEFICIARY_ID, BANK_ACCOUNT, UPI, PAYTM, AMAZONPAY.",
                    "enum": [
                      "BENEFICIARY_ID",
                      "BANK_ACCOUNT",
                      "UPI",
                      "PAYTM",
                      "AMAZONPAY"
                    ]
                  },
                  "deleteBene": {
                    "type": "integer",
                    "description": "Flag to delete and read new beneficiaries if a beneficiary with the same Beneficiary Id is available. When the batch transfer format is BANK_ACCOUNT"
                  },
                  "batch": {
                    "type": "array",
                    "description": "An array of transfer objects",
                    "items": {
                      "title": "CreateTransferBatch",
                      "description": "Batch Transfer Request",
                      "type": "object",
                      "properties": {
                        "transferId": {
                          "type": "string",
                          "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit).",
                          "maxLength": 40
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "description": "Amount to be transferred. Number (>=1)"
                        },
                        "remarks": {
                          "type": "string",
                          "description": "Any remarks if required.",
                          "maxLength": 70
                        },
                        "beneId": {
                          "type": "string",
                          "description": "Beneficiary Id. Alphanumeric characters allowed.",
                          "maxLength": 50
                        },
                        "name": {
                          "type": "string",
                          "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed.",
                          "maxLength": 100
                        },
                        "email": {
                          "type": "string",
                          "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                          "maxLength": 200
                        },
                        "phone": {
                          "type": "string",
                          "description": "Beneficiaries phone number, phone number registered in India",
                          "maxLength": 11
                        },
                        "bankAccount": {
                          "type": "string",
                          "description": "Beneficiary bank account (only alphanumeric characters allowed)",
                          "maxLength": 40
                        },
                        "ifsc": {
                          "type": "string",
                          "description": "Accounts IFSC (standard IFSC format)",
                          "maxLength": 50
                        },
                        "vpa": {
                          "type": "string",
                          "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
                        },
                        "transferMode": {
                          "type": "string",
                          "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                        }
                      },
                      "required": [
                        "transferId",
                        "amount"
                      ],
                      "example": {
                        "amount": "1",
                        "transferId": "1234",
                        "remarks": "Transfer with Id 12356",
                        "name": "john doe",
                        "email": "johndoe@cashfree.com",
                        "phone": 9876543210,
                        "bankAccount": "00111122233",
                        "ifsc": "HDFC0000001"
                      }
                    }
                  }
                },
                "required": [
                  "batchTransferId",
                  "batchFormat",
                  "batch"
                ]
              },
              "examples": {
                "batch_transfer_request": {
                  "summary": "Batch Transfer Request",
                  "description": "Request Body for making a batch transfer",
                  "value": {
                    "batchTransferId": "abc-12356",
                    "batchFormat": "BANK_ACCOUNT",
                    "batch": [
                      {
                        "amount": "1",
                        "transferId": "1234",
                        "remarks": "Transfer with Id 12356",
                        "name": "john doe",
                        "email": "johndoe@cashfree.com",
                        "phone": 9876543210,
                        "bankAccount": "00111122233",
                        "ifsc": "HDFC0000001"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferAsyncResponse",
                  "description": "Transfer Async Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "batch_transfer_response": {
                    "summary": "Batch Transfer Response",
                    "description": "Batch Transfer Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Request accepted",
                      "data": {
                        "referenceId": 1594
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BatchTransferIdExists": {
                    "summary": "Batch TransferId already exists",
                    "description": "Batch with given TransferId already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "409",
                      "message": "Batch TransferId abc-12356 already exists"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "PermissionDenied": {
                    "summary": "Permission Denied",
                    "description": "Permission Denied",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Permission Denied"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getBatchTransferStatus": {
      "get": {
        "summary": "Get Batch Transfer Status",
        "description": "Use this API to get the status of the Batch Transfer.",
        "tags": [
          "Transfers"
        ],
        "operationId": "getBatchTransferStatus",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "batchTransferId",
            "description": "Batch transfer ID to fetch the status",
            "example": "test_batch_format_01",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BatchTransferStatusResponse",
                  "description": "Batch Transfer Status Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rowCount": {
                          "type": "integer"
                        },
                        "referenceId": {
                          "type": "integer"
                        },
                        "transfers": {
                          "type": "array",
                          "items": {
                            "title": "BatchTransferEntry",
                            "description": "Batch Transfer",
                            "type": "object",
                            "properties": {
                              "transferId": {
                                "type": "string"
                              },
                              "paymentInstrumentId": {
                                "type": "string"
                              },
                              "beneId": {
                                "type": "string"
                              },
                              "referenceId": {
                                "type": "string"
                              },
                              "bankAccount": {
                                "type": "string"
                              },
                              "ifsc": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "remarks": {
                                "type": "string"
                              },
                              "utr": {
                                "type": "string"
                              },
                              "addedOn": {
                                "type": "string"
                              },
                              "processedOn": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "failureReason": {
                                "type": "string"
                              }
                            },
                            "example": {
                              "beneId": "9999999999_18875",
                              "transferId": "PTM_00052312126",
                              "referenceId": 1523969543,
                              "bankAccount": "9999999999",
                              "ifsc": "PYTM0000001",
                              "amount": "12.00",
                              "remarks": "",
                              "status": "SUCCESS",
                              "utr": "W1532082926",
                              "addedOn": "2018-07-20",
                              "processedOn": "2018-07-20"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "batch_transfer_status_response": {
                    "summary": "Batch Transfer Status Response",
                    "description": "Batch Transfer Status Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Data retrieved successfully",
                      "data": {
                        "rowCount": 2,
                        "referenceId": 1582,
                        "transfers": [
                          {
                            "beneId": "9999999999_18875",
                            "transferId": "PTM_00121241112",
                            "referenceId": 1523969542,
                            "bankAccount": "9999999999",
                            "ifsc": "PYTM0000001",
                            "amount": "12.00",
                            "remarks": "",
                            "status": "SUCCESS",
                            "utr": "W1532082925",
                            "addedOn": "2018-07-20",
                            "processedOn": "2018-07-20"
                          },
                          {
                            "beneId": "9999999999_18875",
                            "transferId": "PTM_00052312126",
                            "referenceId": 1523969543,
                            "bankAccount": "9999999999",
                            "ifsc": "PYTM0000001",
                            "amount": "12.00",
                            "remarks": "",
                            "status": "SUCCESS",
                            "utr": "W1532082926",
                            "addedOn": "2018-07-20",
                            "processedOn": "2018-07-20"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BatchTransferIdNotFound": {
                    "summary": "Batch Transfer Id does not exist",
                    "description": "Batch Transfers with requested Id does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Batch Transfer Id does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/cardpay": {
      "post": {
        "summary": "CardPay",
        "description": "Use this API to transfer money to beneficiary cards. Provide details such as beneficiary name, card type, network type, and transfer ID.",
        "operationId": "cardpay",
        "deprecated": false,
        "tags": [
          "Transfers"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to transfer to a card",
          "content": {
            "application/json": {
              "schema": {
                "title": "CardPayRequest",
                "description": "Card Pay Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount you want to transfer. Amount should be >= 1.00. Decimals are allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "Unique transfer ID to identify the transfer. Alphanumeric characters and underscore are allowed. The maximum character limit is 40."
                  },
                  "token": {
                    "type": "string",
                    "description": "It is the tokenised card number or card token for this transfer."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Remarks for your reference. Alphanumeric characters and whitespace are allowed. The maximum character limit is 70."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the beneficiary who receives the transfer amount."
                  },
                  "networkType": {
                    "type": "string",
                    "description": "Specify the card type - VISA/MASTERCARD.",
                    "enum": [
                      "VISA",
                      "MASTERCARD"
                    ]
                  },
                  "cryptogram": {
                    "type": "string",
                    "description": "It contains formatted chip/cryptogram data relating to the token cryptogram. The maximum character limit is 600. It is optional for MASTERCARD and not required for VISA."
                  },
                  "tokenExpiry": {
                    "type": "string",
                    "description": "Applicable only for MASTERCARD. The format for the valid token expiry date should be YYYY-MM. It cannot be null. Provide a valid tokenExpiry if collected from the customers. If unavailable, populate a static value with a forward year and month in the correct format (YYYY-MM). The maximum character limit is 10."
                  },
                  "cardType": {
                    "type": "string",
                    "description": "Specify if it is a debit or credit card. Values allowed: DEBIT/CREDIT. CREDIT is the default value if the parameter does not exist or is not specified."
                  },
                  "tokenPANSequenceNumber": {
                    "type": "string",
                    "description": "A maximum of 3 alphanumeric characters are allowed. It is optional for MASTERCARD and not required for VISA."
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP Address of the caller"
                  },
                  "product": {
                    "type": "string",
                    "description": "Cashfree Product Name"
                  }
                },
                "required": [
                  "token",
                  "amount",
                  "transferId",
                  "cardType"
                ]
              },
              "examples": {
                "card_pay_request": {
                  "summary": "Card Pay Request",
                  "description": "Request Body for making transfer to a card",
                  "value": {
                    "token": "4640837720072836",
                    "amount": 1.2,
                    "transferId": "cardpay_11",
                    "remarks": "Transfer to card",
                    "name": "John Doe",
                    "networkType": "VISA",
                    "tokenExpiry": "2026-07",
                    "cardType": "CREDIT"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_pending_at_bank_response": {
                    "summary": "Transfer request pending at the bank",
                    "description": "Transfer request pending at the bank",
                    "value": {
                      "status": "PENDING",
                      "subCode": "201",
                      "message": "Transfer request pending at the bank",
                      "data": {
                        "referenceId": "10023",
                        "utr": "",
                        "acknowledged": 0
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "TransferIdExists": {
                    "summary": "Transfer Id already exists",
                    "description": "Transfer Id already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Transfer Id already exists."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidToken": {
                    "summary": "Invalid Token",
                    "description": "Invalid Token",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "Token is not valid"
                    }
                  },
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "NotEnoughBalance": {
                    "summary": "Not enough available balance in the account",
                    "description": "Not enough available balance in the account",
                    "value": {
                      "status": "ERROR",
                      "subCode": "412",
                      "message": "Not enough available balance in the account."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "ProvideValidToken": {
                    "summary": "Invalid Token",
                    "description": "Invalid Token",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide valid token details"
                    }
                  },
                  "ProvideValidAmount": {
                    "summary": "amount should be at least 1.0",
                    "description": "amount should be at least 1.0",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "amount should be at least 1.0"
                    }
                  },
                  "InvalidBankAccountOrIFSC": {
                    "summary": "Invalid bank account number or IFSC provided",
                    "description": "Invalid bank account number or IFSC provided",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Invalid bank account number or IFSC provided."
                    }
                  },
                  "InvalidName": {
                    "summary": "Invalid Name",
                    "description": "Invalid Name",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid name"
                    }
                  },
                  "InvalidNetworkType": {
                    "summary": "Invalid Network Type",
                    "description": "Invalid Network Type",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Please provide a valid networkType"
                    }
                  },
                  "InvalidCardType": {
                    "summary": "Invalid Card Type",
                    "description": "Invalid Card Type",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "cardType is invalid"
                    }
                  },
                  "TransferIdRestrictions": {
                    "summary": "Invalid transferId passed in the request",
                    "description": "Invalid transferId passed in the request",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "transferId can contain only alphabets, numbers, hyphen and underscore"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/lend": {
      "post": {
        "summary": "Lend",
        "description": "Use this API to send requests for loan disbursement to the beneficiary. The service charges are pooled for the respective party and disbursed at the end of day. Disbursement amount = (Amount - total service charges).",
        "tags": [
          "Transfers"
        ],
        "operationId": "lend",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body for loan disbursement to beneficiary",
          "content": {
            "application/json": {
              "schema": {
                "title": "LendRequest",
                "description": "Lend Request",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "It is the loan amount. It should be equal to or greater than 1.00."
                  },
                  "beneId": {
                    "type": "string",
                    "description": "It is the unique ID to identify the beneficiary. Only alphanumeric characters are allowed."
                  },
                  "loanId": {
                    "type": "string",
                    "description": "It is the unique ID to identify the loan. Only alphanumeric characters are allowed."
                  },
                  "remarks": {
                    "type": "string"
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                  },
                  "transferType": {
                    "type": "string"
                  },
                  "serviceCharges": {
                    "type": "array",
                    "description": "It is the service charges that need to be disbursed to different parties.",
                    "items": {
                      "title": "LoanDisbursalServiceCharge",
                      "description": "Loan Disbursal Service Charge",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Service Charge Name"
                        },
                        "value": {
                          "type": "number",
                          "format": "double",
                          "description": "Service Charge Amount"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    }
                  },
                  "beneDetails": {
                    "type": "object",
                    "description": "It is the details of the beneficiary.",
                    "properties": {
                      "beneId": {
                        "type": "string",
                        "description": "Beneficiary Id. Alphanumeric characters allowed."
                      },
                      "name": {
                        "type": "string",
                        "description": "It is the name of the beneficiary. It should be a maximum of 100 characters. Only alphabets and whitespaces ( ) are allowed."
                      },
                      "email": {
                        "type": "string",
                        "description": "It is the email address of the beneficiary. A maximum of 200 characters are allowed. The value should contain @ and period (.)."
                      },
                      "phone": {
                        "type": "string",
                        "description": "It is the phone number of the beneficiary. The phone number must be registered in India. Only numeric values are allowed. It should be between 8 and 12 characters excluding +91."
                      },
                      "bankAccount": {
                        "type": "string",
                        "description": "It is the bank account of the beneficiary. It must be between 9-18 alphanumeric characters. It is a required parameter in the case of banktransfer, imps, and neft."
                      },
                      "ifsc": {
                        "type": "string",
                        "description": "The IFSC information of the bank account of the dealer/distributor who raised the invoice for the customer to pay. It should be an alphanumeric value of 11 characters. The first 4 characters should be alphabets, the 5th character should be a 0, and the remaining 6 characters should be numerals."
                      },
                      "vpa": {
                        "type": "string",
                        "description": "It is the virtual payment address of the beneficiary. A maximum of 100 characters are allowed. Accepted values: alphanumeric, period (.), hyphen (-), at sign (@), underscore (). Underscore () and period (.) are accepted before and after at sign (@). Hyphen (-) is accepted only before at sign (@)."
                      },
                      "address1": {
                        "type": "string",
                        "description": "It is the address of the beneficiary. A maximum of 150 characters are allowed. Only alphanumeric values and whitespaces ( ) are allowed."
                      },
                      "address2": {
                        "type": "string",
                        "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
                      },
                      "city": {
                        "type": "string",
                        "description": "Beneficiary city, only alphabets and white space (50 character limit)"
                      },
                      "state": {
                        "type": "string",
                        "description": "Beneficiary state, only alphabets and white space (50 character limit)"
                      },
                      "pincode": {
                        "type": "string",
                        "description": "Beneficiaries pincode, only numbers (6 character limit)"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "phone",
                      "address1"
                    ]
                  }
                },
                "required": [
                  "loanId",
                  "serviceCharges"
                ]
              },
              "examples": {
                "lend_request_with_beneId": {
                  "summary": "Lend Request with Beneficiary ID",
                  "description": "Request body for loan disbursement to beneficiary with beneficiary id",
                  "value": {
                    "beneId": "bene1",
                    "loanId": "laon1",
                    "amount": "1000",
                    "transferMode": "imps",
                    "serviceCharges": [
                      {
                        "key": "something",
                        "value": "50"
                      }
                    ]
                  }
                },
                "lend_request_with_bene_details": {
                  "summary": "Lend Request with beneficiary details",
                  "description": "Request body for loan disbursement to beneficiary with beneficiary details",
                  "value": {
                    "loanId": "laon1",
                    "amount": "1000",
                    "transferMode": "imps",
                    "serviceCharges": [
                      {
                        "key": "something",
                        "value": "50"
                      }
                    ],
                    "beneDetails": {
                      "name": "Test",
                      "email": "test@cashfree.com",
                      "phone": "8765434569",
                      "address1": "xyz",
                      "vpa": "success@upi"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_pending_at_bank_response": {
                    "summary": "Transfer request pending at the bank",
                    "description": "Transfer request pending at the bank",
                    "value": {
                      "status": "PENDING",
                      "subCode": "201",
                      "message": "Transfer request pending at the bank",
                      "data": {
                        "referenceId": "10023",
                        "utr": "",
                        "acknowledged": 0
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BeneIDMissing": {
                    "summary": "BeneId missing in the request",
                    "description": "Beneficiary Id missing in the request",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "BeneId missing in the request"
                    }
                  },
                  "ServiceChargeMoreThanDisbursalAmount": {
                    "summary": "Total service charge is greater than disbursal amount",
                    "description": "Total service charge is greater than disbursal amount",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Total service charge is greater than disbursal amount"
                    }
                  },
                  "InsufficientBalanceInLenderFundsource": {
                    "summary": "Insufficient balance in LENDER fundsource",
                    "description": "Insufficient balance in LENDER fundsource",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Insufficient balance in LENDER fundsource"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "InvalidBankAccountOrIFSC": {
                    "summary": "Invalid bank account number or IFSC provided",
                    "description": "Invalid bank account number or IFSC provided",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Invalid bank account number or IFSC provided."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/requestTransfer": {
      "post": {
        "summary": "Standard Transfer Sync v1.2",
        "description": "Use this API to initiate an amount transfer request at Cashfree by providing beneficiary id, amount, and transfer id. This is a sync transfer request.",
        "tags": [
          "Transfers v1.2"
        ],
        "operationId": "requestTransfer_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body for sync transfer v1.2",
          "content": {
            "application/json": {
              "schema": {
                "title": "TransferRequestV12",
                "description": "Transfer Request v1.2",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "amount to be transferred. Decimals allowed (>= 1.00)"
                  },
                  "beneId": {
                    "type": "string",
                    "description": "Beneficiary Id. Alphanumeric characters allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit)."
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit)."
                  },
                  "transferType": {
                    "type": "string",
                    "description": "Transfer Type",
                    "maxLength": 7
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP Address of the caller"
                  },
                  "product": {
                    "type": "string",
                    "description": "Cashfree Product Name"
                  },
                  "paymentInstrumentId": {
                    "type": "string",
                    "description": "Specify the fund source ID from where you want the amount to be debited."
                  }
                },
                "required": [
                  "beneId",
                  "amount",
                  "transferId"
                ]
              },
              "examples": {
                "transfer_request_v12": {
                  "summary": "Transfer Request v1.2",
                  "description": "Transfer Request v1.2",
                  "value": {
                    "beneId": "JOHN18011",
                    "amount": "1.00",
                    "transferId": "JUNOB2018"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  },
                  "BeneficiaryNotFound": {
                    "summary": "Beneficiary Not Found",
                    "description": "Beneficiary does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Beneficiary does not exist"
                    }
                  },
                  "InvalidRemarks": {
                    "summary": "Invalid characters in Remarks",
                    "description": "Invalid characters in Remarks",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Remarks can have only numbers, alphabets and whitespaces."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/requestAsyncTransfer": {
      "post": {
        "summary": "Standard Transfer Async v1.2",
        "description": "Use this API to initiate an amount transfer request at Cashfree by providing beneficiary id, amount, and transfer id. This is an async transfer request.",
        "tags": [
          "Transfers v1.2"
        ],
        "operationId": "requestAsyncTransfer_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body for async transfer v1.2",
          "content": {
            "application/json": {
              "schema": {
                "title": "TransferRequestV12",
                "description": "Transfer Request v1.2",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "amount to be transferred. Decimals allowed (>= 1.00)"
                  },
                  "beneId": {
                    "type": "string",
                    "description": "Beneficiary Id. Alphanumeric characters allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique Id to identify this transfer. Alphanumeric and underscore (_) allowed (40 character limit)."
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional remarks, if any. Alphanumeric and white spaces allowed (70 characters limit)."
                  },
                  "transferType": {
                    "type": "string",
                    "description": "Transfer Type",
                    "maxLength": 7
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP Address of the caller"
                  },
                  "product": {
                    "type": "string",
                    "description": "Cashfree Product Name"
                  },
                  "paymentInstrumentId": {
                    "type": "string",
                    "description": "Specify the fund source ID from where you want the amount to be debited."
                  }
                },
                "required": [
                  "beneId",
                  "amount",
                  "transferId"
                ]
              },
              "examples": {
                "transfer_request_v12": {
                  "summary": "Transfer Request v1.2",
                  "description": "Transfer Request v1.2",
                  "value": {
                    "beneId": "JOHN18011",
                    "amount": "1.00",
                    "transferId": "JUNOB2018"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferAsyncResponse",
                  "description": "Transfer Async Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "async_transfer_initiated_response": {
                    "summary": "Transfer Initiated successfully",
                    "description": "Transfer Initiated successfully",
                    "value": {
                      "status": "ACCEPTED",
                      "subCode": "201",
                      "message": "Transfer Initiated",
                      "data": {
                        "referenceId": "107260"
                      }
                    }
                  },
                  "InvalidRemarks": {
                    "summary": "Invalid characters in Remarks",
                    "description": "Invalid characters in Remarks",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Remarks can have only numbers, alphabets and whitespaces."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/directTransfer": {
      "post": {
        "summary": "Direct Transfer V1.2",
        "description": "Use this API to initiate amount transfers directly to the beneficiary account via a bank transfer or UPI. You can add the beneficiary details in the same API request.",
        "tags": [
          "Transfers v1.2"
        ],
        "operationId": "directTransfer_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body for direct transfer v1.2",
          "content": {
            "application/json": {
              "schema": {
                "title": "DirectTransferRequestV12",
                "description": "Direct Transfer Request v1.2",
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be transferred. Amount should be greater that INR 1.00. Decimals are allowed."
                  },
                  "transferId": {
                    "type": "string",
                    "description": "A unique ID to identify this transfer. Alphanumeric characters and underscores are allowed (40 character limit)."
                  },
                  "transferMode": {
                    "type": "string",
                    "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Additional Remarks, if required."
                  },
                  "paymentInstrumentId": {
                    "type": "string",
                    "description": "Specify the fund source ID from where you want the amount to be debited."
                  },
                  "beneDetails": {
                    "type": "object",
                    "description": "Object with the beneficiary details to whom amount is to be transferred",
                    "properties": {
                      "beneId": {
                        "type": "string",
                        "description": "Beneficiary Id. Alphanumeric characters allowed.",
                        "maxLength": 50
                      },
                      "name": {
                        "type": "string",
                        "description": "Beneficiary name, only alphabets and white space (100 character limit)",
                        "maxLength": 100
                      },
                      "email": {
                        "type": "string",
                        "description": "Beneficiary email address, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                        "maxLength": 200
                      },
                      "phone": {
                        "type": "string",
                        "description": "Beneficiary phone number, phone number registered in India (only digits, 8 - 12 characters after stripping +91)"
                      },
                      "bankAccount": {
                        "type": "string",
                        "description": "Beneficiary bank account (9 - 18 alphanumeric character limit) (Required in case of banktransfer, imps, neft mode)",
                        "maxLength": 40
                      },
                      "ifsc": {
                        "type": "string",
                        "description": "Accounts IFSC (standard IFSC format) - length 11, first four bank IFSC and 5th digit 0 (Required in case of banktransfer, imps, neft mode)",
                        "maxLength": 50
                      },
                      "vpa": {
                        "type": "string",
                        "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@) (Required in case of UPI)",
                        "maxLength": 100
                      },
                      "address1": {
                        "type": "string",
                        "description": "Beneficiary address. Alphanumeric characters and space allowed (150 character limit)."
                      },
                      "address2": {
                        "type": "string",
                        "description": "Beneficiary address, alphanumeric and space allowed (but script, HTML tags gets sanitized or removed) (150 character limit)"
                      },
                      "city": {
                        "type": "string",
                        "description": "Beneficiary city, only alphabets and white space (50 character limit)"
                      },
                      "state": {
                        "type": "string",
                        "description": "Beneficiary state, only alphabets and white space (50 character limit)"
                      },
                      "pincode": {
                        "type": "string",
                        "description": "Beneficiaries pincode, only numbers (6 character limit)",
                        "maxLength": 6
                      }
                    }
                  }
                },
                "required": [
                  "amount",
                  "transferId",
                  "transferMode",
                  "beneDetails"
                ]
              },
              "examples": {
                "direct_transfer_v12": {
                  "summary": "Direct Transfer Request v1.2",
                  "description": "Request Body for making a transfer with beneficiary bank account details v1.2",
                  "value": {
                    "amount": 30,
                    "transferId": "JUNOB2018142",
                    "transferMode": "banktransfer",
                    "remarks": "test",
                    "beneDetails": {
                      "bankAccount": "026291800001191",
                      "ifsc": "YESB0000262",
                      "name": "Ranjiths",
                      "email": "ranjiths@cashfree.com",
                      "phone": "9999999999",
                      "address1": "any_dummy_value"
                    },
                    "paymentInstrumentId": "YESB_CONNECTED"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferResponse",
                  "description": "Transfer Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        },
                        "utr": {
                          "type": "string"
                        },
                        "acknowledged": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "transfer_completed_response": {
                    "summary": "Transfer completed successfully",
                    "description": "Transfer completed successfully",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Transfer completed successfully",
                      "data": {
                        "referenceId": "10023",
                        "utr": "P16111765023806",
                        "acknowledged": 1
                      }
                    }
                  },
                  "transfer_pending_at_bank_response": {
                    "summary": "Transfer request pending at the bank",
                    "description": "Transfer request pending at the bank",
                    "value": {
                      "status": "PENDING",
                      "subCode": "201",
                      "message": "Transfer request pending at the bank",
                      "data": {
                        "referenceId": "10023",
                        "utr": "",
                        "acknowledged": 0
                      }
                    }
                  },
                  "TransferIdExists": {
                    "summary": "Transfer Id already exists",
                    "description": "Transfer Id already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "400",
                      "message": "Transfer Id already exists."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/getTransferStatus": {
      "get": {
        "summary": "Get Transfer Status V1.2",
        "description": "Use these details to get details of a particular transfer. You can pass referenceId or transferId to fetch the details.",
        "tags": [
          "Transfers v1.2"
        ],
        "operationId": "getTransferStatus_v1.2",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "referenceId",
            "description": "Reference ID of the transaction. (Either referenceId or transferId is mandatory)",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "transferId",
            "description": "Transfer ID of the transaction.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetTransferStatusResponse",
                  "description": "Transfer Status Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transfer": {
                          "type": "object",
                          "properties": {
                            "transferId": {
                              "type": "string"
                            },
                            "referenceId": {
                              "type": "string"
                            },
                            "bankAccount": {
                              "type": "string"
                            },
                            "ifsc": {
                              "type": "string"
                            },
                            "beneId": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number",
                              "format": "double"
                            },
                            "status": {
                              "type": "string"
                            },
                            "utr": {
                              "type": "string"
                            },
                            "addedOn": {
                              "type": "string"
                            },
                            "processedOn": {
                              "type": "string"
                            },
                            "reason": {
                              "type": "string"
                            },
                            "transferMode": {
                              "type": "string"
                            },
                            "acknowledged": {
                              "type": "integer"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "vpa": {
                              "type": "string"
                            },
                            "paymentInstrumentId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_transfer_status_success_response": {
                    "summary": "Get Transfer Status Success Response v1.2",
                    "description": "Get Transfer Status Success Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 23457200",
                      "data": {
                        "transfer": {
                          "transferId": "javasdktesttransferid120793",
                          "bankAccount": "7766671501729",
                          "ifsc": "SBIN0000003",
                          "beneId": "johndoevalid983",
                          "amount": "1",
                          "status": "SUCCESS",
                          "utr": "0470445059841910",
                          "addedOn": "2021-11-24 13:39:25",
                          "processedOn": "2021-11-24 13:40:27",
                          "transferMode": "BANK",
                          "acknowledged": 1,
                          "phone": "9876543210",
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  },
                  "get_transfer_status_pending_response": {
                    "summary": "Get Transfer Status Pending Response v1.2",
                    "description": "Get Transfer Status Pending Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 403010",
                      "data": {
                        "transfer": {
                          "transferId": "test_transfer12",
                          "bankAccount": "007711000031",
                          "ifsc": "HDFC0000077",
                          "beneId": "7221085558_1636419207",
                          "amount": "20",
                          "status": "PENDING",
                          "addedOn": "2021-11-15 17:20:30",
                          "processedOn": "2021-11-15 17:20:30",
                          "transferMode": "BANK",
                          "acknowledged": 0,
                          "phone": "7221085558",
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  },
                  "get_transfer_status_failed_response": {
                    "summary": "Get Transfer Status Failed Response v1.2",
                    "description": "Get Transfer Status Failed Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 411914",
                      "data": {
                        "transfer": {
                          "transferId": "async_test_869",
                          "beneId": "",
                          "amount": "1",
                          "status": "FAILED",
                          "addedOn": "2021-11-22 13:43:04",
                          "processedOn": "2021-11-22 13:43:05",
                          "reason": "INVALID_ACCOUNT_FAIL",
                          "transferMode": "PAYTM",
                          "acknowledged": 0,
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  },
                  "get_transfer_status_rejected_response": {
                    "summary": "Get Transfer Status Rejected Response v1.2",
                    "description": "Get Transfer Status Rejected Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 23457123",
                      "data": {
                        "transfer": {
                          "transferId": "transfer_13",
                          "beneId": "",
                          "amount": "4.56",
                          "status": "REJECTED",
                          "addedOn": "2021-11-24 11:18:44",
                          "processedOn": "2021-11-24 11:18:44",
                          "reason": "BENEFICIARY_NOT_EXIST",
                          "transferMode": "BANK",
                          "acknowledged": 0,
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  },
                  "get_transfer_status_reversed_response": {
                    "summary": "Get Transfer Status Reversed Response v1.2",
                    "description": "Get Transfer Status Reversed Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 403239",
                      "data": {
                        "transfer": {
                          "transferId": "test_ransfer26",
                          "bankAccount": "02014457596969",
                          "ifsc": "CITI0000001",
                          "beneId": "7503630267_1636542343",
                          "amount": "3",
                          "status": "REVERSED",
                          "utr": "1637055017373632",
                          "addedOn": "2021-11-16 15:00:17",
                          "processedOn": "2021-11-16 15:01:17",
                          "reason": "ANY_OTHER_REASON",
                          "transferMode": "BANK",
                          "acknowledged": 0,
                          "phone": "7503630267",
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  },
                  "get_transfer_status_received_response": {
                    "summary": "Get Transfer Status Received Response v1.2",
                    "description": "Get Transfer Status Received Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Details of transfer with referenceId 402310",
                      "data": {
                        "transfer": {
                          "transferId": "transferBaas9899",
                          "beneId": "",
                          "amount": "1",
                          "status": "RECEIVED",
                          "addedOn": "2021-11-11 16:07:43",
                          "processedOn": "0000-00-00 00:00:00",
                          "transferMode": "BANK",
                          "acknowledged": 0,
                          "paymentInstrumentId": "CASHFREE_1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "ReferenceIdNotFound": {
                    "summary": "Reference Id not found",
                    "description": "Reference not found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "ReferenceId is invalid or does not exist"
                    }
                  },
                  "TransferIdNotFound": {
                    "summary": "Transfer Id Not found",
                    "description": "Transfer Id Not found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "TransferId is invalid or does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/requestBatchTransfer": {
      "post": {
        "summary": "Batch Transfer V1.2",
        "description": "Use this API to create transfers to multiple beneficiaries. This API accepts an array of transfer objects under the batch field.",
        "operationId": "requestBatchTransfer_v1.2",
        "tags": [
          "Transfers v1.2"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to perform a batch transfer v1.2",
          "content": {
            "application/json": {
              "schema": {
                "title": "BatchTransferRequestV12",
                "description": "Batch Transfer Request v1.2",
                "type": "object",
                "properties": {
                  "batchTransferId": {
                    "type": "string",
                    "description": "Unique Id of the Batch Transfer, alphanumeric and underscore allowed (60 character limit)"
                  },
                  "batchFormat": {
                    "type": "string",
                    "description": "Format of the batch transfers, valid values are, BENEFICIARY_ID, BANK_ACCOUNT, UPI, PAYTM, AMAZONPAY.",
                    "enum": [
                      "BENEFICIARY_ID",
                      "BANK_ACCOUNT",
                      "UPI",
                      "PAYTM",
                      "AMAZONPAY"
                    ]
                  },
                  "deleteBene": {
                    "type": "integer",
                    "description": "Flag to delete and read new beneficiaries if a beneficiary with the same Beneficiary Id is available. When the batch transfer format is BANK_ACCOUNT"
                  },
                  "paymentInstrumentId": {
                    "type": "string",
                    "description": "Specify the payment instrument from where you want the amount to be debited."
                  },
                  "batch": {
                    "type": "array",
                    "description": "An array of transfer objects",
                    "items": {
                      "title": "CreateTransferBatch",
                      "description": "Batch Transfer Request",
                      "type": "object",
                      "properties": {
                        "transferId": {
                          "type": "string",
                          "description": "A unique ID to identify this transfer. Alphanumeric, hyphen and underscore (_) allowed (40 character limit).",
                          "maxLength": 40
                        },
                        "amount": {
                          "type": "number",
                          "format": "double",
                          "description": "Amount to be transferred. Number (>=1)"
                        },
                        "remarks": {
                          "type": "string",
                          "description": "Any remarks if required.",
                          "maxLength": 70
                        },
                        "beneId": {
                          "type": "string",
                          "description": "Beneficiary Id. Alphanumeric characters allowed.",
                          "maxLength": 50
                        },
                        "name": {
                          "type": "string",
                          "description": "It is the name of the beneficiary. A maximum of 100 characters are allowed.",
                          "maxLength": 100
                        },
                        "email": {
                          "type": "string",
                          "description": "Beneficiaries email, string in email Id format (Ex: johndoe_1@cashfree.com) - should contain @ and dot (.) - (200 character limit)",
                          "maxLength": 200
                        },
                        "phone": {
                          "type": "string",
                          "description": "Beneficiaries phone number, phone number registered in India",
                          "maxLength": 11
                        },
                        "bankAccount": {
                          "type": "string",
                          "description": "Beneficiary bank account (only alphanumeric characters allowed)",
                          "maxLength": 40
                        },
                        "ifsc": {
                          "type": "string",
                          "description": "Accounts IFSC (standard IFSC format)",
                          "maxLength": 50
                        },
                        "vpa": {
                          "type": "string",
                          "description": "Beneficiary VPA, alphanumeric, dot (.), hyphen (-), at sign (@), and underscore () allowed (100 character limit). Note: underscore () and dot (.) gets accepted before and after at sign (@), but hyphen (-) get only accepted before at sign (@)"
                        },
                        "transferMode": {
                          "type": "string",
                          "description": "It is the mode of transfer. Allowed values are: banktransfer, neft, imps, rtgs, upi, paytm, and amazonpay. The default transferMode is banktransfer."
                        }
                      },
                      "required": [
                        "transferId",
                        "amount"
                      ],
                      "example": {
                        "amount": "1",
                        "transferId": "1234",
                        "remarks": "Transfer with Id 12356",
                        "name": "john doe",
                        "email": "johndoe@cashfree.com",
                        "phone": 9876543210,
                        "bankAccount": "00111122233",
                        "ifsc": "HDFC0000001"
                      }
                    }
                  }
                },
                "required": [
                  "batchTransferId",
                  "batchFormat",
                  "batch"
                ]
              },
              "examples": {
                "batch_transfer_request_v12": {
                  "summary": "Batch Transfer Request v1.2",
                  "description": "Request Body for making a batch transfer v1.2",
                  "value": {
                    "batchTransferId": "batch_req_21",
                    "batchFormat": "BANK_ACCOUNT",
                    "deleteBene": 0,
                    "batch": [
                      {
                        "transferId": "TransferID1",
                        "amount": "10",
                        "bankAccount": "7766666351004",
                        "ifsc": "YESB0000001",
                        "phone": "9999999998",
                        "email": "test@gmail.com",
                        "name": "Transfer1"
                      },
                      {
                        "transferId": "TransferID2",
                        "amount": "10",
                        "bankAccount": "7766666351004",
                        "ifsc": "YESB0000001",
                        "phone": "9999999998",
                        "email": "test@gmail.com",
                        "name": "Transfer2"
                      }
                    ],
                    "paymentInstrumentId": "IBL_CONNECTED"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "TransferAsyncResponse",
                  "description": "Transfer Async Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "batch_transfer_response_v12": {
                    "summary": "Batch Transfer Response v1.2",
                    "description": "Batch Transfer Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Batch Transfer requested successfully. Please check later for processing status.",
                      "data": {
                        "referenceId": 486
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Resource Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BatchTransferIdExists": {
                    "summary": "Batch TransferId already exists",
                    "description": "Batch with given TransferId already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "409",
                      "message": "Batch TransferId abc-12356 already exists"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "PaymentInstrumentIDNotFound": {
                    "summary": "Payment Instrument ID Not Found",
                    "description": "Payment Instrument ID Not Found",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "Specified paymentInstrumentId not available"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1.2/getBatchTransferStatus": {
      "get": {
        "tags": [
          "Transfers v1.2"
        ],
        "summary": "Get Batch Transfer Status V1.2",
        "description": "Use this API to get the status of the Batch Transfer.",
        "operationId": "getBatchTransferStatus_v1.2",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "batchTransferId",
            "required": true,
            "description": "Batch transfer ID to fetch the status",
            "example": "test_batch_format_01",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BatchTransferStatusResponseV12",
                  "description": "Batch Transfer Status Response v1.2",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rowCount": {
                          "type": "integer"
                        },
                        "referenceId": {
                          "type": "integer"
                        },
                        "paymentInstrumentId": {
                          "type": "string"
                        },
                        "transfers": {
                          "type": "array",
                          "items": {
                            "title": "BatchTransferEntryV12",
                            "description": "Batch Transfer v1.2",
                            "type": "object",
                            "properties": {
                              "transferId": {
                                "type": "string"
                              },
                              "beneId": {
                                "type": "string"
                              },
                              "referenceId": {
                                "type": "string"
                              },
                              "bankAccount": {
                                "type": "string"
                              },
                              "ifsc": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number",
                                "format": "double"
                              },
                              "remarks": {
                                "type": "string"
                              },
                              "utr": {
                                "type": "string"
                              },
                              "addedOn": {
                                "type": "string"
                              },
                              "processedOn": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "failureReason": {
                                "type": "string"
                              }
                            },
                            "example": {
                              "beneId": "9999999999_18875",
                              "transferId": "PTM_00121241112",
                              "referenceId": 1523969542,
                              "bankAccount": "9999999999",
                              "ifsc": "PYTM0000001",
                              "amount": "12.00",
                              "remarks": "",
                              "status": "SUCCESS",
                              "utr": "W1532082925",
                              "addedOn": "2018-07-20",
                              "processedOn": "2018-07-20"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "SUCCESS",
                    "subCode": "200",
                    "message": "Data retrieved successfully",
                    "data": {
                      "rowCount": 2,
                      "referenceId": 1582,
                      "paymentInstrumentId": "CASHFREE_1",
                      "transfers": [
                        {
                          "beneId": "9999999999_18875",
                          "transferId": "PTM_00121241112",
                          "referenceId": 1523969542,
                          "bankAccount": "9999999999",
                          "ifsc": "PYTM0000001",
                          "amount": "12.00",
                          "remarks": "",
                          "status": "SUCCESS",
                          "utr": "W1532082925",
                          "addedOn": "2018-07-20",
                          "processedOn": "2018-07-20"
                        },
                        {
                          "beneId": "9999999999_18875",
                          "transferId": "PTM_00052312126",
                          "referenceId": 1523969543,
                          "bankAccount": "9999999999",
                          "ifsc": "PYTM0000001",
                          "amount": "12.00",
                          "remarks": "",
                          "status": "SUCCESS",
                          "utr": "W1532082926",
                          "addedOn": "2018-07-20",
                          "processedOn": "2018-07-20"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "get_batch_transfer_status_response_v12": {
                    "summary": "Get Batch Transfer Status Response v1.2",
                    "description": "Get Batch Transfer Status Response v1.2",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Data retrieved successfully",
                      "data": {
                        "rowCount": 2,
                        "referenceId": 1582,
                        "paymentInstrumentId": "CASHFREE_1",
                        "transfers": [
                          {
                            "beneId": "9999999999_18875",
                            "transferId": "PTM_00121241112",
                            "referenceId": 1523969542,
                            "bankAccount": "9999999999",
                            "ifsc": "PYTM0000001",
                            "amount": "12.00",
                            "remarks": "",
                            "status": "SUCCESS",
                            "utr": "W1532082925",
                            "addedOn": "2018-07-20",
                            "processedOn": "2018-07-20"
                          },
                          {
                            "beneId": "9999999999_18875",
                            "transferId": "PTM_00052312126",
                            "referenceId": 1523969543,
                            "bankAccount": "9999999999",
                            "ifsc": "PYTM0000001",
                            "amount": "12.00",
                            "remarks": "",
                            "status": "SUCCESS",
                            "utr": "W1532082926",
                            "addedOn": "2018-07-20",
                            "processedOn": "2018-07-20"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "BatchTransferIdNotFound": {
                    "summary": "Batch Transfer Id does not exist",
                    "description": "Batch Transfers with requested Id does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Batch Transfer Id does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Incidents",
        "description": "Use this API to get the list of incidents on banks (Resolved, Unresolved, All) for a given time range.",
        "operationId": "getIncidents",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Incident status - RESOLVED/UNRESOLVED/ALL are the allowed values Default value is UNRESOLVED if not provided",
            "example": "ALL",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "required": false,
            "description": "Start Time for the desired period. Format yyyy-mm-dd hh:mm:ss",
            "example": "2022-01-01 00:00:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endTime",
            "required": false,
            "description": "End Time for the desired period. Format yyyy-mm-dd hh:mm:ss. Default values are current day start Time(00:00:00) and end Time(23:59:59) if not provided.",
            "example": "2022-01-05 23:59:59",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "entityCode",
            "required": false,
            "description": "Code for the entity(BANK) on which the incidents are created.",
            "example": "CIUB",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetIncidentsResponse",
                  "description": "Response for getting incidents",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "incidents": {
                          "type": "array",
                          "items": {
                            "title": "IncidentExternal",
                            "description": "External Incident",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "type": {
                                "type": "string"
                              },
                              "entity": {
                                "type": "string"
                              },
                              "mode": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "resolvedAt": {
                                "type": "string"
                              },
                              "isScheduled": {
                                "type": "boolean"
                              },
                              "isResolved": {
                                "type": "boolean"
                              },
                              "impact": {
                                "type": "string"
                              },
                              "entityName": {
                                "type": "string"
                              },
                              "entityCode": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_incidents_response": {
                    "summary": "Get Incidents Response",
                    "description": "Get Incidents Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "List of incidents retrieved",
                      "data": {
                        "incidents": [
                          {
                            "id": 214711,
                            "type": "BENEFICIARY",
                            "entity": "BANK",
                            "mode": "IMPS",
                            "createdAt": "2022-01-05 00:48:54",
                            "resolvedAt": "2022-01-05 00:53:24",
                            "isScheduled": false,
                            "isResolved": true,
                            "impact": "LOW",
                            "entityName": "City union bank",
                            "entityCode": "CIUB"
                          },
                          {
                            "id": 214710,
                            "type": "BENEFICIARY",
                            "entity": "BANK",
                            "mode": "IMPS",
                            "createdAt": "2022-01-05 00:43:24",
                            "resolvedAt": "2022-01-05 00:45:24",
                            "isScheduled": false,
                            "isResolved": true,
                            "impact": "LOW",
                            "entityName": "City union bank",
                            "entityCode": "CIUB"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "403": {
            "description": "Forbidden Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "APIDisabled": {
                    "summary": "APIs Disabled",
                    "description": "Forbidden request. APIs are disabled",
                    "value": {
                      "status": "ERROR",
                      "subCode": "403",
                      "message": "APIs not enabled. Please reach out to care@cashfree.com"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "EndTimeLessThanStartTime": {
                    "summary": "End time is less than start time",
                    "description": "End time cannot be less than start time",
                    "value": {
                      "status": "ERROR",
                      "subCode": "422",
                      "message": "startTime should be less than or equal to EndTime"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/createCashgram": {
      "post": {
        "tags": [
          "Cashgram"
        ],
        "summary": "Create Cashgram",
        "operationId": "createCashgram",
        "description": "Use this API to create a Cashgram.",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to create Cashgram",
          "content": {
            "application/json": {
              "schema": {
                "title": "CashgramCreateRequest",
                "description": "Cashgram Create Request",
                "type": "object",
                "properties": {
                  "cashgramId": {
                    "type": "string",
                    "description": "Unique Id of the Cashgram. Alphanumeric, underscore (_), and hyphen (-) allowed (35 character limit)",
                    "maxLength": 36
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount to be transferred, >= 1.00"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the contact",
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the contact",
                    "maxLength": 200
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the contact"
                  },
                  "linkExpiry": {
                    "type": "string",
                    "description": "Date to expire the cashgram link, Date format YYYY/MM/DD, maximum 30 days from the date of creation.",
                    "maxLength": 10
                  },
                  "remarks": {
                    "type": "string",
                    "description": "Specify remarks, if any."
                  },
                  "notifyCustomer": {
                    "type": "integer",
                    "description": "If value is 1, a link is sent to customers phone and email."
                  },
                  "validateAccount": {
                    "type": "integer",
                    "description": "Binary value (0,1) to decide whether to validate account or not"
                  },
                  "payoutType": {
                    "type": "string",
                    "description": "Payout Type"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the cashgram"
                  }
                },
                "required": [
                  "cashgramId",
                  "amount",
                  "name",
                  "phone",
                  "linkExpiry"
                ]
              },
              "examples": {
                "create_cashgram_request": {
                  "summary": "Create Cashgram Request",
                  "description": "Request Body for creating a new cashgram",
                  "value": {
                    "cashgramId": "JOHaN10",
                    "amount": "1.00",
                    "name": "John Doe",
                    "email": "johndoe@cashfree.com",
                    "phone": "9876543210",
                    "linkExpiry": "2020/04/01",
                    "remarks": "sample cashgram",
                    "notifyCustomer": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CashgramCreateResponse",
                  "description": "Cashgram Create Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "type": "integer"
                        },
                        "cashgramLink": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "create_cashgram_response": {
                    "summary": "Create Cashgram Response",
                    "description": "Create Cashgram Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Cashgram Created",
                      "data": {
                        "referenceId": 123456,
                        "cashgramLink": "http://csgr.am/abcdefg"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "409": {
            "description": "Resource Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "CashgramIDAlreadyExists": {
                    "summary": "Cashgram with given id already exists",
                    "description": "Cashgram with the requested id already exists",
                    "value": {
                      "status": "ERROR",
                      "subCode": "409",
                      "message": "Cashgram with id JOHaN10 already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/getCashgramStatus": {
      "get": {
        "summary": "Get Cashgram Status",
        "description": "Use this API to get the status of the Cashgram created.",
        "tags": [
          "Cashgram"
        ],
        "operationId": "getCashgramStatus",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          },
          {
            "in": "query",
            "name": "cashgramId",
            "required": true,
            "description": "ID of the Cashgram",
            "example": "JOHaN10",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CashgramStatusResponse",
                  "description": "Cashgram Status Response",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cashgramStatus": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "referenceId": {
                          "type": "integer"
                        },
                        "cashgramId": {
                          "type": "string"
                        },
                        "cashgramLink": {
                          "type": "string"
                        },
                        "redeemRefId": {
                          "type": "integer"
                        },
                        "utr": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "get_cashgram_response": {
                    "summary": "Get Cashgram Status Response",
                    "description": "Get Cashgram Status Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Cashgram details retrieved",
                      "data": {
                        "cashgramStatus": "ACTIVE",
                        "referenceId": 123456,
                        "cashgramId": "JOHaN10",
                        "cashgramLink": "http://csgr.am/abcdefg"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "CashgramNotFoundWithThisID": {
                    "summary": "Cashgram with given id does not exist",
                    "description": "Cashgram with the requested id does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Cashgram with id JOHaN10 does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payout/v1/deactivateCashgram": {
      "post": {
        "summary": "Deactivate Cashgram",
        "description": "Use this API to deactivate a Cashgram.",
        "tags": [
          "Cashgram"
        ],
        "operationId": "deactivateCashgram",
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-request-id",
            "description": "Request id for the API call. Can be used to resolve tech issues. Communicate this in your tech related queries to cashfree",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "4dfb9780-46fe-11ee-be56-0242ac120002"
          }
        ],
        "requestBody": {
          "description": "Request body to deactivate Cashgram",
          "content": {
            "application/json": {
              "schema": {
                "title": "CashgramDeactivateRequest",
                "description": "Cashgram Deactivate Request",
                "type": "object",
                "properties": {
                  "cashgramId": {
                    "type": "string",
                    "description": "ID of the Cashgram to be deactivated. Alphanumeric and underscore (_) allowed (35 character limit)",
                    "maxLength": 35
                  }
                },
                "required": [
                  "cashgramId"
                ]
              },
              "examples": {
                "deactivate_cashgram_request": {
                  "summary": "Deactivate Cashgram Request",
                  "description": "Request Body for deactivating a cashgram",
                  "value": {
                    "cashgramId": "JOHaN10"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CashgramDeactivateResponse",
                  "description": "Response for deactivating a cashgram",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "subCode": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "deactivate_cashgram_response": {
                    "summary": "Deactivate Cashgram Response",
                    "description": "Deactivate Cashgram Response",
                    "value": {
                      "status": "SUCCESS",
                      "subCode": "200",
                      "message": "Cashgram with id - JOHaN10 successfully deactivated!"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "schema": {
                  "type": "string"
                },
                "example": "some-req-id",
                "description": "Request id for your api call. Is blank or null if no `x-request-id` is sent during the request"
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Error",
                  "description": "Error Response for non-2XX cases",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Overall status of the API call"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed message explaining the response"
                    },
                    "subCode": {
                      "type": "string",
                      "description": "Status code acting as an umbrella for the response"
                    }
                  }
                },
                "examples": {
                  "CashgramNotFoundWithThisID": {
                    "summary": "Cashgram with given id does not exist",
                    "description": "Cashgram with the requested id does not exist",
                    "value": {
                      "status": "ERROR",
                      "subCode": "404",
                      "message": "Cashgram with id JOHaN10 does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}